<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WePay.NET</name>
    </assembly>
    <members>
        <member name="T:WePay.AccountMembership.AccountMembershipService">
            <summary>
            Using the Account Membership APIs to add or change an account admin requires WePay permission.
            A user must have confirmed their account before they can be added or modified into an admin role (financial owner).
            When a call is changing admin, AdminContext and Reason are required.
            Partners must construct a user interface that asks merchants the reason for the change, so that WePay’s risk management system can process the change appropriately.
            Important: The admin of an account can only be changed on the condition that the account has not previously settled any funds to a bank account or via paper check.
            </summary>
        </member>
        <member name="M:WePay.AccountMembership.AccountMembershipService.CreateAsync(WePay.AccountMembership.Request.CreateRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to add a user to an account.
            If you want the new user to have the role set to admin, you must specify an admin_context with a reason.
            The WePay Risk team reviews these requests and must approve them before the new user is granted admin privileges.
            Note: In the AdminContext, if you specify the reason as anything other than beneficiary, you must provide an explanation.
            </summary>
            <param name="createRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.AccountMembership.AccountMembershipService.ModifyAsync(WePay.AccountMembership.Request.ModifyRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this to modify the role of a user that already has access to an account.
            To remove access completely, use the Remove call.
            The access token must be the token associated with the current admin, not the user to be modified.
            </summary>
            <param name="modifyRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.AccountMembership.AccountMembershipService.RemoveAsync(WePay.AccountMembership.Request.RemoveRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Allows a partner to remove a user from a specific account.
            The user being removed must not be the only current admin.
            CAUTION: The access token sent in the header must be that of the financial admin. The UserId is for the user to be removed.
            </summary>
            <param name="removeRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="T:WePay.AccountMembership.Common.Reasons">
            <summary>
            All possible reasons for WePay.AccountMembership.Structure.AdminContext Reason field
            </summary>
        </member>
        <member name="T:WePay.AccountMembership.Common.Reasons.Choices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.AccountMembership.Common.Reasons.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.AccountMembership.Common.Roles">
            <summary>
            All possible roles
            </summary>
        </member>
        <member name="T:WePay.AccountMembership.Common.Roles.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.AccountMembership.Common.Roles.Moderator">
            <summary>
            Permits the user to make any changes to the account besides viewing or changing KYC and banking info.
            </summary>
        </member>
        <member name="F:WePay.AccountMembership.Common.Roles.Admin">
            <summary>
            The financial owner and may access and edit all information.
            </summary>
        </member>
        <member name="F:WePay.AccountMembership.Common.Roles.Member">
            <summary>
            View-only privileges.
            </summary>
        </member>
        <member name="F:WePay.AccountMembership.Common.Roles.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="P:WePay.AccountMembership.Request.CreateRequest.AccountId">
            <summary>
            The unique ID of the account for which you want to add a user.
            </summary>
        </member>
        <member name="P:WePay.AccountMembership.Request.CreateRequest.MemberAccessToken">
            <summary>
            Access token for the user to be added.
            </summary>
        </member>
        <member name="P:WePay.AccountMembership.Request.CreateRequest.Role">
            <summary>
            The role assigned to the new user.
            (Enumeration of these values can be found in WePay.AccountMembership.Common.Roles)
            Default: moderator
            </summary>
        </member>
        <member name="P:WePay.AccountMembership.Request.CreateRequest.AdminContext">
            <summary>
            Required if role is admin.
            </summary>
        </member>
        <member name="P:WePay.AccountMembership.Request.ModifyRequest.AccountId">
            <summary>
            The unique ID of the account for which you want to modify a user.
            </summary>
        </member>
        <member name="P:WePay.AccountMembership.Request.ModifyRequest.UserId">
            <summary>
            The unique ID of the user to be modified.
            </summary>
        </member>
        <member name="P:WePay.AccountMembership.Request.ModifyRequest.Role">
            <summary>
            New role.
            (Enumeration of these values can be found in WePay.AccountMembership.Common.Roles)
            </summary>
        </member>
        <member name="P:WePay.AccountMembership.Request.ModifyRequest.AdminContext">
            <summary>
            Required if role is admin.
            </summary>
        </member>
        <member name="P:WePay.AccountMembership.Request.RemoveRequest.AccountId">
            <summary>
            The unique ID of the account from which the user should be removed.
            </summary>
        </member>
        <member name="P:WePay.AccountMembership.Request.RemoveRequest.UserId">
            <summary>
            The unique ID of the user to be removed from this account.
            </summary>
        </member>
        <member name="P:WePay.AccountMembership.Response.LookupResponse.AccountId">
            <summary>
            The unique ID of the account.
            </summary>
        </member>
        <member name="P:WePay.AccountMembership.Response.LookupResponse.UserId">
            <summary>
            The unique ID of the user that was added, modified or removed.
            </summary>
        </member>
        <member name="P:WePay.AccountMembership.Response.LookupResponse.Role">
            <summary>
            The role assigned to the user.
            </summary>
        </member>
        <member name="T:WePay.AccountMembership.Structure.AdminContext">
            <summary>
            Describes the context of an account administrator.
            </summary>
        </member>
        <member name="P:WePay.AccountMembership.Structure.AdminContext.Reason">
            <summary>
            The reason the person is an administrator (role).
            (Enumeration of these values can be found in WePay.AccountMembership.Common.Reasons)
            </summary>
        </member>
        <member name="P:WePay.AccountMembership.Structure.AdminContext.Explanation">
            <summary>
            An explanation of why the person is an admistrator for this account if not the beneficiary.
            </summary>
        </member>
        <member name="M:WePay.Account.AccountService.CreateAsync(WePay.Account.Request.CreateRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to create a new payment account for the user associated with the access token used to make this call.
            </summary>
            <param name="createRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.Account.AccountService.LookupAsync(WePay.Account.Request.LookupRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to lookup the details of a payment account on WePay.
            The payment account must belong to the user associated with the access token used to make the call.
            </summary>
            <param name="lookupRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.Account.AccountService.ModifyAsync(WePay.Account.Request.ModifyRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to update the specified properties of the account. 
            </summary>
            <param name="modifyRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.Account.AccountService.DeleteAsync(WePay.Account.Request.DeleteRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call delete an account.
            The user associated with the access token used must have permission to delete the account.
            An account may not be deleted if it has a balance or pending payments.
            Once the account is deleted, it will not appear in the results of a Find call, nor will you be able to un-delete the account.
            </summary>
            <param name="deleteRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.Account.AccountService.FindAsync(WePay.Account.Request.FindRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to search the accounts of the user associated with the access token used to make the call.
            You can search by name or ReferenceId, and the response will be an array of all the matching accounts.
            If both Name and ReferenceId are blank, this will return an array of all of the user’s accounts.
            </summary>
            <param name="findRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.Account.AccountService.GetUpdateUriAsync(WePay.Account.Request.GetUpdateUriRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to add or update all incomplete items for an account such as Know Your Customer (KYC) or settlement info.
            It returns a URL that a user can visit to update information for their account.
            </summary>
            <param name="getUpdateUriRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.Account.AccountService.SettlementSetupAsync(WePay.Account.Request.SettlementSetupRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to define how WePay settles funds to a merchant.
            Know Your Customer (KYC) information must be complete before making this call.
            PERMISSON REQUIRED
            </summary>
            <param name="settlementSetupRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="T:WePay.Account.Common.AccountReviewStatuses">
            <summary>
            All possible account review statuses
            </summary>
        </member>
        <member name="T:WePay.Account.Common.AccountReviewStatuses.ValuesIndices">
            <summary>
            Indices for the Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Account.Common.AccountReviewStatuses.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Account.Common.AccountStates">
            <summary>
            All possible account states
            </summary>
        </member>
        <member name="T:WePay.Account.Common.AccountStates.ValuesIndices">
            <summary>
            Indices for the Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Account.Common.AccountStates.ActionRequired">
            <summary>
            The account is not active and requires some action to be taken by the account owner.
            </summary>
        </member>
        <member name="F:WePay.Account.Common.AccountStates.Pending">
            <summary>
            The account was created using a temporary access token and needs to be confirmed by the account owner.
            </summary>
        </member>
        <member name="F:WePay.Account.Common.AccountStates.Active">
            <summary>
            The account is active and no further action is required.
            </summary>
        </member>
        <member name="F:WePay.Account.Common.AccountStates.Disabled">
            <summary>
            	The account has been disabled by WePay and can no longer accept payments.
            	An account will become disabled exactly 30 days after the first payment if no Know Your Customer (KYC) or settlement information is on file.
            	WePay may also disable the account for security or regulatory reasons.
            </summary>
        </member>
        <member name="F:WePay.Account.Common.AccountStates.Deleted">
            <summary>
            The account has been deleted.
            </summary>
        </member>
        <member name="F:WePay.Account.Common.AccountStates.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Account.Common.AccountTypes">
            <summary>
            All possible account types
            </summary>
        </member>
        <member name="T:WePay.Account.Common.AccountTypes.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Account.Common.AccountTypes.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Account.Common.ActionReasons">
            <summary>
            All actions that are required to make this account active
            </summary>
        </member>
        <member name="T:WePay.Account.Common.ActionReasons.ValuesIndices">
            <summary>
            Indices for Values property for iterations
            </summary>
        </member>
        <member name="F:WePay.Account.Common.ActionReasons.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Account.Common.DisabledReasons">
            <summary>
            All reasons for why an account was disabled
            </summary>
        </member>
        <member name="T:WePay.Account.Common.DisabledReasons.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Account.Common.DisabledReasons.Fraud">
            <summary>
            WePay has determined that fraudulent activity is occuring and is perpetrated by the account administrator (not a fraudulent transaction by a payer), or the account is being administered for fraudulent purposes. The account can be reinstated if an appeal has been made and the subsequent investigation reveals that any fraud found is not a result of fraudulent activities on the part of the account owner or administrator.
            </summary>
        </member>
        <member name="F:WePay.Account.Common.DisabledReasons.HighRiskChargeback">
            <summary>
            Based on an account history of excessive chargeback activity or a determination by WePay that the type of business is at high risk of excessive chargebacks. There is no remediation for this type of disablement.
            </summary>
        </member>
        <member name="F:WePay.Account.Common.DisabledReasons.ReportedUser">
            <summary>
            The platform has reported that they closed the merchant account. The account administrator must resolve issues with the platform before WePay can reinstate the account.
            </summary>
        </member>
        <member name="F:WePay.Account.Common.DisabledReasons.TosViolation">
            <summary>
            Occurs when the TOS agreement has been violated by the merchant. See our Terms of Service (https://go.wepay.com/terms-of-service-us), section 7 for more information.
            </summary>
        </member>
        <member name="F:WePay.Account.Common.DisabledReasons.CountryNotSupported">
            <summary>
            Occurs when the merchant is not operating in one of WePay's supported countries or is accepting payment in a currency other than that of the country where they are registered.
            </summary>
        </member>
        <member name="F:WePay.Account.Common.DisabledReasons.ClosedForLoss">
            <summary>
             Occurs when the account balance becomes negative and remains so for a period of 30 days. Remediation of this state is on a case-by-case basis following review by the WePay Risk Team.
            </summary>
        </member>
        <member name="F:WePay.Account.Common.DisabledReasons.NoSettlementPath">
            <summary>
            Occurs when more than 30 days have elapsed after the merchant accepts their first payment and no settlement path has been established. This is remediated by adding a settlement method (e.g., a bank account) and completing the KYC process.
            </summary>
        </member>
        <member name="F:WePay.Account.Common.DisabledReasons.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Account.Common.PaymentsStatuses">
            <summary>
            All Incoming and Outgoing Payments statuses
            </summary>
        </member>
        <member name="T:WePay.Account.Common.PaymentsStatuses.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Account.Common.PaymentsStatuses.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Account.Common.SupportedCardTypes">
            <summary>
            All possible supported card types currently supported by WePay
            </summary>
        </member>
        <member name="T:WePay.Account.Common.SupportedCardTypes.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Account.Common.SupportedCardTypes.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="P:WePay.Account.Request.CreateRequest.Name">
            <summary>
            The name for the account being created. For security reasons, the word wepay cannot be in the account name. 
            Note: Account names cannot contain control characters or non-printable characters, like emojis.
            </summary>
        </member>
        <member name="P:WePay.Account.Request.CreateRequest.Description">
            <summary>
            The description of the account you want to create.
            Describe the account in terms of: goods or services paid for using this account, types of payees, purpose of the account, etc.
            </summary>
        </member>
        <member name="P:WePay.Account.Request.CreateRequest.ReferenceId">
            <summary>
            The reference ID of the account. It can be any string, but must be unique for the account.
            </summary>
        </member>
        <member name="P:WePay.Account.Request.CreateRequest.Type">
            <summary>
            The type of account you are creating.
            (Enumeration of these values can be found in WePay.Account.Common.AccountTypes)
            </summary>
        </member>
        <member name="P:WePay.Account.Request.CreateRequest.CallbackUri">
            <summary>
            The URI that will receive IPNs for this account.
            If you set this parameter, you will receive an IPN whenever the account is verified or deleted.
            Otherwise, no notifications will be sent.
            See the Instant Payment Notifications page (https://www.wepay.com/developer/reference/ipn) for more information.
            </summary>
        </member>
        <member name="P:WePay.Account.Request.CreateRequest.Mcc">
            <summary>
            The Merchant Category Code (MCC) indicating the merchant's type of business. See the MCC reference page (https://www.wepay.com/developer/reference/mcc) for more information.
            </summary>
        </member>
        <member name="P:WePay.Account.Request.CreateRequest.Country">
            <summary>
            The account's country of origin 2-letter ISO code.
            (Enumeration of these values can be found in WePay.Shared.Common.Countries)
            Default: US
            </summary>
        </member>
        <member name="P:WePay.Account.Request.CreateRequest.Currencies">
            <summary>
            Array of supported currency strings for this account.
            WePay currently supports only one currency per account.
            (Enumeration of these values can be found in WePay.Shared.Common.Currencies)
            Default: USD
            </summary>
        </member>
        <member name="P:WePay.Account.Request.CreateRequest.Rbits">
            <summary>
            Array of rbit structures associated with the account.
            </summary>
        </member>
        <member name="P:WePay.Account.Request.CreateRequest.CountryOptions">
            <summary>
            Used for Canadian accounts only.
            Default: null
            </summary>
        </member>
        <member name="P:WePay.Account.Request.CreateRequest.FeeScheduleSlot">
            <summary>
            The custom fee schedule value to use for the merchant.
            Values start at 0, not 1.
            Passing null will remove the custom fee schedule.
            PERMISSION REQUIRED
            </summary>
        </member>
        <member name="P:WePay.Account.Request.CreateRequest.SupportContactNumber">
            <summary>
            The merchant's public-facing support contact number.
            If set, this phone number will be present on the payer's credit card statement.
            </summary>
        </member>
        <member name="P:WePay.Account.Request.CreateRequest.ThemeObject">
            <summary>
            The theme structure you want to be used for the account's flows and emails
            </summary>
        </member>
        <member name="P:WePay.Account.Request.CreateRequest.ImageUri">
            <summary>
            The URI for an image that you want to use for the accounts icon.
            This image will be used in the co-branded checkout process.
            </summary>
        </member>
        <member name="P:WePay.Account.Request.CreateRequest.GaqDomains">
            <summary>
            An array of Google Analytics domains associated with the account.
            See the Google Analytics tutorial (https://www.wepay.com/developer/reference/analytics) for more details.
            </summary>
        </member>
        <member name="P:WePay.Account.Request.DeleteRequest.AccountId">
            <summary>
            The unique ID of the account you want to delete.
            </summary>
        </member>
        <member name="P:WePay.Account.Request.DeleteRequest.Reason">
            <summary>
            Reason for deleting the account.
            </summary>
        </member>
        <member name="P:WePay.Account.Request.FindRequest.Name">
            <summary>
            The name of the account for which you are searching.
            </summary>
        </member>
        <member name="P:WePay.Account.Request.FindRequest.ReferenceId">
            <summary>
            The reference ID of the account for which you are searching (set by the app in in Create or Modify).
            </summary>
        </member>
        <member name="P:WePay.Account.Request.FindRequest.SortOrder">
            <summary>
            Sort the results of the search by time created.
            Use desc for most recent to least recent.
            Use asc for least recent to most recent.
            (Enumeration of these values can be found in WePay.Shared.Common.SortOrders)
            Default: desc
            </summary>
        </member>
        <member name="P:WePay.Account.Request.GetUpdateUriRequest.AccountId">
            <summary>
            The unique ID of the account you want to add or update info for.
            </summary>
        </member>
        <member name="P:WePay.Account.Request.GetUpdateUriRequest.Mode">
            <summary>
            What mode the process will be displayed in.
            (Enumeration of these values can be found in WePay.Shared.Common.ProcessModes)
            The options are iframe or regular. Choose iframe if you would like to frame the process on your site.
            Default: regular
            </summary>
        </member>
        <member name="P:WePay.Account.Request.GetUpdateUriRequest.RedirectUri">
            <summary>
            The URI to which the user is be redirected to after completing the Know Your Customer (KYC) or settlement setup information input process.
            Default: null
            </summary>
        </member>
        <member name="P:WePay.Account.Request.GetUpdateUriRequest.PrefillInfo">
            <summary>
            Prefill the Know Your Customer (KYC) form with information that you already have about the merchant.
            PERMISSION REQUIRED
            </summary>
        </member>
        <member name="P:WePay.Account.Request.LookupRequest.AccountId">
            <summary>
            The unique ID of the account you want to look up.
            </summary>
        </member>
        <member name="P:WePay.Account.Request.ModifyRequest.AccountId">
            <summary>
            The unique ID of the account you want to modify.
            </summary>
        </member>
        <member name="P:WePay.Account.Request.ModifyRequest.Name">
            <summary>
            The name for the account. For security reasons, the word wepay cannot be in the account name.
            </summary>
        </member>
        <member name="P:WePay.Account.Request.ModifyRequest.Description">
            <summary>
            The description for the account.
            </summary>
        </member>
        <member name="P:WePay.Account.Request.ModifyRequest.ReferenceId">
            <summary>
            The reference ID for the account. Can be any string, but must be unique for the account.
            </summary>
        </member>
        <member name="P:WePay.Account.Request.ModifyRequest.CallbackUri">
            <summary>
            The URI that will receive IPNs for this account. You will receive an IPN whenever the account is verified or deleted.
            See the Instant Payment Notifications reference page (https://www.wepay.com/developer/reference/ipn) for more information.
            /// </summary>
        </member>
        <member name="P:WePay.Account.Request.ModifyRequest.Rbits">
            <summary>
            Array of rbit structures associated with the account.
            </summary>
        </member>
        <member name="P:WePay.Account.Request.ModifyRequest.CountryOptions">
            <summary>
            Used for Canadian accounts only.
            Default: null
            </summary>
        </member>
        <member name="P:WePay.Account.Request.ModifyRequest.FeeScheduleSlot">
            <summary>
            The custom fee schedule value to use for the merchant.
            Values start at 0, not 1.
            Passing null will remove the custom fee schedule.
            PERMISSION REQUIRED
            </summary>
        </member>
        <member name="P:WePay.Account.Request.ModifyRequest.SupportContactNumber">
            <summary>
            The merchant's public-facing support contact number.
            If set, this phone number will be present on the payer's credit card statement.
            </summary>
        </member>
        <member name="P:WePay.Account.Request.ModifyRequest.ImageUri">
            <summary>
            The URI for an image that you want to use for the accounts icon.
            This image will be used in the co-branded checkout process.
            </summary>
        </member>
        <member name="P:WePay.Account.Request.ModifyRequest.GaqDomains">
            <summary>
            The array of Google Analytics domains to be associated with the account.
            An empty array will remove all the Google Analytics domains previously associated with the account.
            See the Google Analytics tutorial (https://www.wepay.com/developer/reference/analytics) for more details.
            </summary>
        </member>
        <member name="P:WePay.Account.Request.ModifyRequest.ThemeObject">
            <summary>
            The theme structure you want to be used for the account's flows and emails.
            </summary>
        </member>
        <member name="P:WePay.Account.Request.SettlementSetupRequest.AccountId">
            <summary>
            The account ID for which an auto withdrawal is to be setup.
            </summary>
        </member>
        <member name="P:WePay.Account.Request.SettlementSetupRequest.SettlementMethod">
            <summary>
            Settlement method containing exactly one of these:
            SettlementBankId as setup via SettlementBank - Create, or SendCheckToAddress which is the address to which recurring checks are sent.
            </summary>
        </member>
        <member name="P:WePay.Account.Request.SettlementSetupRequest.Frequency">
            <summary>
            How often funds are sent.
            (Enumeration of these values can be found in WePay.Shared.Common.Frequencies)
            Note: Daily is not allowed for SendCheckToAddress settlement method.
            </summary>
        </member>
        <member name="P:WePay.Account.Response.DeleteResponse.AccountId">
            <summary>
            The unique ID of the account that was successfully deleted.
            </summary>
        </member>
        <member name="P:WePay.Account.Response.DeleteResponse.State">
            <summary>
            The state of the account.
            (Enumeration of these values can be found in WePay.Account.Common.AccountStates)
            </summary>
        </member>
        <member name="P:WePay.Account.Response.GetUpdateUriResponse.AccountId">
            <summary>
            The ID of the account that is updated by the URI.
            </summary>
        </member>
        <member name="P:WePay.Account.Response.GetUpdateUriResponse.Uri">
            <summary>
            The URI to add or update info for the specified account ID.
            Do not store the returned URI on your side as it can change.
            </summary>
        </member>
        <member name="P:WePay.Account.Response.LookupResponse.AccountId">
            <summary>
            The unique ID of the account.
            </summary>
        </member>
        <member name="P:WePay.Account.Response.LookupResponse.Name">
            <summary>
            The name of the account.
            </summary>
        </member>
        <member name="P:WePay.Account.Response.LookupResponse.State">
            <summary>
            The state of the account.
            (Enumeration of these values can be found in WePay.Account.Common.AccountStates)
            </summary>
        </member>
        <member name="P:WePay.Account.Response.LookupResponse.Description">
            <summary>
            The account description. This information is used by the WePay Risk and Support teams.
            The description should provide a clear explanation of the purpose and use of the account.
            </summary>
        </member>
        <member name="P:WePay.Account.Response.LookupResponse.OwnerUserId">
            <summary>
            The unique ID of the user who is the current financial owner of this account.
            </summary>
        </member>
        <member name="P:WePay.Account.Response.LookupResponse.ReferenceId">
            <summary>
            The unique reference ID of the account (this is set by the application in the Create or Modify call).
            </summary>
        </member>
        <member name="P:WePay.Account.Response.LookupResponse.CallbackUri">
            <summary>
            The URI that will receive IPNs for this account.
            You will receive an IPN whenever the account is verified or deleted. If not present,
            then this value is not set for the account.
            </summary>
        </member>
        <member name="P:WePay.Account.Response.LookupResponse.Type">
            <summary>
            The account type.
            (Enumeration of these values can be found in WePay.Account.Common.AccountTypes)
            </summary>
        </member>
        <member name="P:WePay.Account.Response.LookupResponse.CreateTime">
            <summary>
            The Unix timestamp (UTC) when the account was created.
            </summary>
        </member>
        <member name="P:WePay.Account.Response.LookupResponse.Balances">
            <summary>
            Array of account balances for each currency.
            </summary>
        </member>
        <member name="P:WePay.Account.Response.LookupResponse.Statuses">
            <summary>
            Array of incoming and outgoing payments status for each currency.
            </summary>
        </member>
        <member name="P:WePay.Account.Response.LookupResponse.ActionReasons">
            <summary>
            Array of action strings explaining all the actions that are required to make this account active.
            It will be empty if no action is required.
            (Enumeration of these values can be found in WePay.Account.Common.ActionReasons)
            </summary>
        </member>
        <member name="P:WePay.Account.Response.LookupResponse.DisabledReasons">
            <summary>
            Array of strings explaining all reasons for why an account was disabled. It will be empty if the account is enabled.
            (Enumeration of these values can be found in WePay.Account.Common.DisabledReasons)
            </summary>
        </member>
        <member name="P:WePay.Account.Response.LookupResponse.DisablementTime">
            <summary>
            For accounts that have not provided Know Your Customer (KYC) and settlement information, this is the Unix timestamp (UTC) when the account will be disabled.
            If null then the account is valid and not scheduled to be disabled.
            </summary>
        </member>
        <member name="P:WePay.Account.Response.LookupResponse.Country">
            <summary>
            The account's country of origin 2-letter ISO code
            (Enumeration of these values can be found in WePay.Shared.Common.Countries)
            </summary>
        </member>
        <member name="P:WePay.Account.Response.LookupResponse.Currencies">
            <summary>
            Array of supported currency strings for this account. Only one currency is allowed per account at this time.
            (Enumeration of these values can be found in WePay.Shared.Common.Currencies)
            </summary>
        </member>
        <member name="P:WePay.Account.Response.LookupResponse.RbitsIds">
            <summary>
            Array of rbits ids associated with the account.
            </summary>
        </member>
        <member name="P:WePay.Account.Response.LookupResponse.FeeSchedule">
            <summary>
            The account's fee schedule value.
            If not present, then this value has not been set for the account.
            PERMISSION REQUIRED
            </summary>
        </member>
        <member name="P:WePay.Account.Response.LookupResponse.SupportedCardTypes">
            <summary>
            Array of supported card type strings for this account.
            (Enumeration of these values can be found in WePay.Account.Common.SupportedCardTypes)
            </summary>
        </member>
        <member name="P:WePay.Account.Response.LookupResponse.SupportContactNumber">
            <summary>
            The merchant's public-facing support contact number.
            If set, this phone number will be present on the payer's credit card statement.
            </summary>
        </member>
        <member name="P:WePay.Account.Response.LookupResponse.Imageuri">
            <summary>
            The URI for an image that you want to use for the accounts icon.
            This image will be used in the co-branded checkout process.
            </summary>
        </member>
        <member name="P:WePay.Account.Response.LookupResponse.GaqDomains">
            <summary>
            An array of Google Analytics domains associated with the account.
            See the analytics tutorial (https://www.wepay.com/developer/reference/analytics) for more information.
            </summary>
        </member>
        <member name="P:WePay.Account.Response.LookupResponse.ThemeObject">
            <summary>
            The theme structure you want to be used for the account's flows and emails.
            </summary>
        </member>
        <member name="P:WePay.Account.Response.SettlementSetupResponse.Method">
            <summary>
            Indicates the method of payment.
            (Enumeration of these values can be found in WePay.Shared.Common.SettlementPaymentMethods)
            </summary>
        </member>
        <member name="P:WePay.Account.Response.SettlementSetupResponse.Frequency">
            <summary>
            Indicates how often the withdrawal is made.
            (Enumeration of these values can be found in WePay.Shared.Common.Frequencies)
            </summary>
        </member>
        <member name="T:WePay.Account.Structure.AccountCurrencyStatus">
            <summary>
            The account currency status structure contains information about an account’s ability to process
            incoming and outgoing payments for a particular currency.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.AccountCurrencyStatus.Currency">
            <summary>
            The ISO 4217 currency code.
            (Enumeration of these values can be found in WePay.Shared.Common.Currencies)
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.AccountCurrencyStatus.IncomingPaymentsStatus">
            <summary>
            Ability to process incoming payments for this currency.
            (Enumeration of these values can be found in WePay.Account.Common.PaymentsStatuses)
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.AccountCurrencyStatus.OutgoingPaymentsStatus">
            <summary>
            Ability to process outgoing payments for this currency.
            (Enumeration of these values can be found in WePay.Account.Common.PaymentsStatuses)
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.AccountCurrencyStatus.AccountReviewStatus">
            <summary>
            Review status of an account for this currency.
            (Enumeration of these values can be found in WePay.Account.Common.AccountReviewStatuses)
            </summary>
        </member>
        <member name="T:WePay.Account.Structure.Balances">
            <summary>
            The balances structure contains information on the account balances and automated withdrawals.
            Accounts can have multiple balances (one for each currency they support).
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.Balances.Currency">
            <summary>
            The ISO 4217 currency code.
            (Enumeration of these values can be found in WePay.Shared.Common.Currencies)
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.Balances.Balance">
            <summary>
            The available balance for this account (specific to the currency specified).
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.Balances.IncomingPendingAmount">
            <summary>
            The amount of money that being sent to the account that is still pending.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.Balances.OutgoingPendingAmount">
            <summary>
            The amount of money being settled to the merchant (either via check or ACH) that is still pending.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.Balances.ReservedAmount">
            <summary>
            The amount of money held in reserves.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.Balances.DisputedAmount">
            <summary>
            The amount of money disputed either via chargeback or through WePay.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.Balances.WthdrawlType">
            <summary>
            How the money will be settled to the merchant.
            (Enumeration of these values can be found in WePay.Shared.Common.SettlementPaymentMethods)
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.Balances.WithdrawlPeriod">
            <summary>
            (Enumeration of these values can be found in WePay.Shared.Common.Frequencies )
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.Balances.WithdrawlNextTime">
            <summary>
            The Unix timestamp (UTC) for the next scheduled settlement.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.Balances.WithdrawlBankName">
            <summary>
            The masked name of the entity funds will be settled to.
            If a check is being sent, this will be the name of the entity the check was mailed to (the "pay to the order of" field).
            </summary>
        </member>
        <member name="T:WePay.Account.Structure.CountryOptions">
            <summary>
            Enable debit card processing for Canadian based merchants.
            See the Canadian user reference (https://www.wepay.com/developer/reference/canadian-users) for more details.
            Note: This should only be used for Canadian based merchants.
            It must be explicitly set to True in order for the merchant to accept payments from debit cards.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.CountryOptions.DebitOptIn">
            <summary>
            True if you want to enable debit card processing for the merchant.
            Default: False
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.FeeSchedule.Slot">
            <summary>
            The 1-based number assigned to the custom fee schedule, if applied.
            If no custom fee schedule is applied, the value returned is 0.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.FeeSchedule.Description">
            <summary>
            The textual description of the fee schedule.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.FeeSchedule.Currency">
            <summary>
            The currency identifier that applies to the fee schedule.
            (Enumeration of these values can be found in WePay.Shared.Common.Currencies)
            </summary>
        </member>
        <member name="T:WePay.Account.Structure.InternationalPhoneNumber">
            <summary>
            The international phone number structure contains information to construct a valid E164 formatted phone number.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.InternationalPhoneNumber.CountryCode">
            <summary>
            Numeric country code. Optional +, followed by 1-3 digits.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.InternationalPhoneNumber.PhoneNumber">
            <summary>
            Country code and phone number.
            </summary>
        </member>
        <member name="T:WePay.Account.Structure.KycPrefillInfo">
            <summary>
            Contains information about a merchant that can be used to prefill fields in the Know Your Customer (KYC) form.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.KycPrefillInfo.Name">
            <summary>
            The legal name of the account owner.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.KycPrefillInfo.Email">
            <summary>
            The email address of the account owner.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.KycPrefillInfo.Phone">
            <summary>
            The phone number of the account owner.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.KycPrefillInfo.EntityPhone">
            <summary>
            The phone number of the entity.
            Note: This is used for businesses and organizations, not individuals.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.KycPrefillInfo.Address">
            <summary>
            The full address of the account owner.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.KycPrefillInfo.EntityAddress">
            <summary>
            The full address of the entity.
            Note: This is used for businesses and organizations, not individuals.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.KycPrefillInfo.DateOfBirth">
            <summary>
            The date of birth of the account owner.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.KycPrefillInfo.EntityName">
            <summary>
            Name of the entity completing KYC.
            Note: This is used for businesses and organizations, not individuals.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.KycPrefillInfo.Url">
            <summary>
            URL that identifies the entity completing KYC.
            Note: This is used for businesses and organizations, not individuals.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.KycPrefillInfo.Description">
            <summary>
            Description of the entity completing KYC
            Note: This is used for businesses and organizations, not individuals.
            </summary>
        </member>
        <member name="T:WePay.Account.Structure.SendCheckToAddress">
            <summary>
            Contains destination address information for a settlement check.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.SendCheckToAddress.Address1">
            <summary>
            The street address where the check is to be sent.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.SendCheckToAddress.Address2">
            <summary>
            Additional address information.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.SendCheckToAddress.City">
            <summary>
            The city portion of the address where the check is to be sent.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.SendCheckToAddress.Region">
            <summary>
            The state, province, or postal region where the check is to be sent.
            Must be from 0 to 30 characters in length and must consist of uppercase letters.
            Conformance to ISO 3166-2 is preferred but not required.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.SendCheckToAddress.PostalCode">
            <summary>
            The postal code for the check address.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.SendCheckToAddress.Country">
            <summary>
            The country where the check is to be sent.
            </summary>
        </member>
        <member name="T:WePay.Account.Structure.SettlementMethod">
            <summary>
            Contains information about the bank to which funds are sent after withdrawal from a merchant’s account.
            One of SettlementBankId or SendCheckToAddress must be set.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.SettlementMethod.SettlementBankId">
            <summary>
            Primary settlement bank ID for auto withdrawal.
            </summary>
        </member>
        <member name="P:WePay.Account.Structure.SettlementMethod.SendCheckToAddress">
            <summary>
            Address information about where to send a check for auto withdrawal.
            </summary>
        </member>
        <member name="T:WePay.Batch.BatchService">
            <summary>
            Use the following call to make multiple API calls with one HTTP request.
            CAUTION: Batch API calls allow your application to avoid throttling limits on sequential API calls.
            Your application can send up to 50 API calls within a batch.
            However, throttling will still apply to the batch API call itself.
            </summary>
        </member>
        <member name="M:WePay.Batch.BatchService.CreateAsync(WePay.Batch.Request.CreateRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use the Create call to make multiple API calls within a single API call.
            Each call has a ReferenceId that can be used to identify it.
            In addition, an AccessToken will be passed for each call in the list, allowing you to make batch API calls for multiple users.
            </summary>
            <param name="createRequest"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="P:WePay.Batch.Request.CreateRequest.ClientId">
            <summary>
            The ID for your API application. It can found on your application's dashboard.
            </summary>
        </member>
        <member name="P:WePay.Batch.Request.CreateRequest.ClientSecret">
            <summary>
            The secret for your API application. It can found on your application's dashboard.
            </summary>
        </member>
        <member name="P:WePay.Batch.Request.CreateRequest.Calls">
            <summary>
            An array of the API calls you want to make.
            </summary>
        </member>
        <member name="T:WePay.Batch.Structure.ApiCall">
            <summary>
            Contains API calls and their associated arguments.
            </summary>
        </member>
        <member name="P:WePay.Batch.Structure.ApiCall.Call">
            <summary>
            The name of the call you want to make (e.g. WePay.Checkout.CheckoutService.EndPointUrls.Create)
            </summary>
        </member>
        <member name="P:WePay.Batch.Structure.ApiCall.Authorization">
            <summary>
            The access token of the user making the API call.
            </summary>
        </member>
        <member name="P:WePay.Batch.Structure.ApiCall.ReferenceId">
            <summary>
            A unique ID you can attach to an API call to identify it.
            </summary>
        </member>
        <member name="P:WePay.Batch.Structure.ApiCall`1.Parameters">
            <summary>
            The parameters required by the API call specified in the call parameter.
            </summary>
        </member>
        <member name="T:WePay.Checkout.CheckoutService">
            <summary>
            The checkout object represents a single payment and defines the amount, the destination account, the application fee, etc
            </summary>
        </member>
        <member name="M:WePay.Checkout.CheckoutService.CreateAsync(WePay.Checkout.Request.CreateRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to create a checkout for an account.
            There are two ways to have your customers make a payment.
            You can have the checkout URL hosted by WePay or you can use a previously acquired payment method, such as a credit card. 
            WePay highly recommends using unique_id to manage timeouts on Create. 
            The UniqueId is used to prevent accidental duplicate calls in the case of an unsuccessful call.
            If a UniqueId is repeated and the Create call appears to be duplicate (the amount, AccountId, and ClientId are identical to the prior call),
            we will return the response of the prior Create call.
            Otherwise, we will return an error.
            1) If your call times out, you can safely call it any number of times with the same UniqueId, and we will only process it once.
            2) If your call receives a 1008 error code and an error message(there was an unknown error - please contact api @wepay.com for support), the request should be resubmitted with the same UniqueId.
            3) If your call receives any other error, you will need a new UniqueId when you fix and resubmit the request.
            TIP: Checkouts expire 30 minutes after they are created if there is no activity on them (e.g. they were abandoned after creation).
            NOTE: Supplying rbits helps improve your experience and the experience of your users. You may be contractually required to include rbit information in your requests (despite being optional at the API level).
            </summary>
            <param name="createRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.Checkout.CheckoutService.ModifyAsync(WePay.Checkout.Request.ModifyRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to modify the callback_uri of a checkout.
            </summary>
            <param name="modifyRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.Checkout.CheckoutService.LookupAsync(WePay.Checkout.Request.LookupRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to lookup the details of a specific checkout on WePay using the CheckoutId.
            Not all response parameters appear in the response: those which do not appear have no associated values.
            </summary>
            <param name="lookupRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.Checkout.CheckoutService.FindAsync(WePay.Checkout.Request.FindRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to search for checkouts associated with an account.
            This call returns an array of checkouts associated with AccountId.
            </summary>
            <param name="findRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.Checkout.CheckoutService.CancelAsync(WePay.Checkout.Request.CancelRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to cancel a payment associated with the checkout created by the application.
            Checkout must be in authorized or captured state.
            The Cancel call cannot be used on Pay With Bank (ACH) payments.
            </summary>
            <param name="cancelRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.Checkout.CheckoutService.CaptureAsync(WePay.Checkout.Request.LookupRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            If AutoCapture for a credit card based payment method was set to false when the checkout was created,
            you will need to make this call to capture funds.
            Until you make this call, the credit card will not be charged and if you do not capture the funds within 7 days then the payment will be automatically cancelled.
            You can only make this call if the checkout is in state authorized.
            </summary>
            <param name="lookupRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.Checkout.CheckoutService.ReleaseAsync(WePay.Checkout.Request.LookupRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            If AutoRelease was set to false when the checkout was created, you will need to make this call to release funds to the account.
            Until you make this call, the money will be held by WePay and if you do not release the funds within 14 days then the payment will be automatically cancelled or refunded.
            You can only make this call if the checkout is in state captured.
            </summary>
            <param name="lookupRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.Checkout.CheckoutService.RefundAsync(WePay.Checkout.Request.RefundRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to refund the payment associated with the checkout created by the application.
            Checkout must be in released state.
            </summary>
            <param name="refundRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="T:WePay.Checkout.Common.CheckoutStates">
            <summary>
            All possible checkout states
             (you can receive callback notifications when the checkout changes state,
             please read our Instant Payment Notification (IPN) Tutorial (https://www.wepay.com/developer/reference/ipn) for more details)
            </summary>
        </member>
        <member name="T:WePay.Checkout.Common.CheckoutStates.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.CheckoutStates.New">
            <summary>
            The checkout was created by the application. 
            his state only exists for checkouts created in WePay's hosted checkout flow.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.CheckoutStates.Authorized">
            <summary>
            The payer entered their payment info and confirmed the payment on WePay.
            WePay has successfully charged the card.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.CheckoutStates.Captured">
            <summary>
            The payment has been reserved from the payer.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.CheckoutStates.Released">
            <summary>
            The payment has been credited to the payee account.
            Note that the released state may be active although there are active partial refunds or partial chargebacks.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.CheckoutStates.Cancelled">
            <summary>
            The payment has been cancelled by the payer, payee, or application.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.CheckoutStates.Refunded">
            <summary>
            The payment was captured and then refunded by the payer, payee, or application.
            The payment has been debited from the payee account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.CheckoutStates.ChargedBack">
            <summary>
            The payment has been charged back by the payer and the payment has been debited from the payee account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.CheckoutStates.Failed">
            <summary>
            The payment has failed.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.CheckoutStates.Expired">
            <summary>
            Checkouts expire if they remain in the new state for more than 30 minutes (e.g., they have been abandoned).
            This state only exists for checkouts created in WePay's hosted checkout flow.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.CheckoutStates.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Checkout.Common.CheckoutTypes">
            <summary>
            All possible checkout types
            </summary>
        </member>
        <member name="T:WePay.Checkout.Common.CheckoutTypes.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.CheckoutTypes.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Checkout.Common.DeliveryTypes">
            <summary>
            All possible delivery types
            </summary>
        </member>
        <member name="T:WePay.Checkout.Common.DeliveryTypes.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.DeliveryTypes.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Checkout.Common.FeePayers.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.FeePayers.Payer">
            <summary>
            Charge fees to the person paying (payer will pay amount + fees, and payee will receive amount).
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.FeePayers.Payee">
            <summary>
            Charge fees to the person receiving money (payer will pay amount, and payee will receive amount - fees).
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.FeePayers.PayerFromApp">
            <summary>
            Payer will be charged app fee (if there is one) and API application will be charged WePay fee.
            Note that if the application's account goes negative, WePay will recover funds from bank account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.FeePayers.PayeeFromApp">
            <summary>
            Payee will be charged the app fee (if there is one) and the API application will be charged the WePay fee.
            Note that if the application's account goes negative, WePay will recover funds from bank account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.FeePayers.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Checkout.Common.FundingSources">
            <summary>
            All possible payment methods which can be accepted for a check out
            </summary>
        </member>
        <member name="T:WePay.Checkout.Common.FundingSources.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.FundingSources.CreditCard">
            <summary>
             Accept only credit card payments.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.FundingSources.PaymentBank">
            <summary>
            Accept only payment bank payments.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.FundingSources.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Checkout.Common.PaymentBankPaymentErrors">
            <summary>
            All recognized Banking Error Codes
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.InsufficientFundsInAccount">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.AccountIsClosed">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.NoAccountOnFile">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.InvalidBankAccountNumber">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.UnauthorizedDebitToConsumerAccount">
            <summary>
            Bank rejected payment request, no follow-up suggested.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.ReturnedAtRequestOfOriginatingBank">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.AuthorizationRevokedByCustomer">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.PaymentStopped">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.InsufficientCollectedFundsInAccountBeingCharged">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.CustomerAdvisesNotAuthorizedOrAmountIncorrect">
            <summary>
            Bank rejected payment request, no follow-up suggested.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.CheckTruncationReturn">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.AccountSoldToAnotherFinancialInstitution">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.InvalidAchRoutingNumber">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.PayeeIsDeceased">
            <summary>
            Bank rejected payment request, no follow-up suggested.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.AccountHolderIsDeceased">
            <summary>
            Bank rejected payment request, no follow-up suggested.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.AccountFundsHaveBeenFrozen">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.ItemReturnedBecauseOfInvalidData">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.ImproperEffectiveDate">
            <summary>
            Bank system error. Customer needs to use a different bank account, preferably at a different bank.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.AmountError">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.AccountDoesNotAllowAchTransactionsOrLimitHasBeenExceeded">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.InvalidCompanyIdentification">
            <summary>
            Bank system error. Customer needs to use a different bank account, preferably at a different bank.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.InvalidIndividualId">
            <summary>
            Bank system error. Customer needs to use a different bank account, preferably at a different bank.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.CreditEntryRefusedByReceiver">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.DuplicateEntry">
            <summary>
            Bank system error. Customer needs to use a different bank account, preferably at a different bank.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.AddendaRecordError">
            <summary>
            Bank system error. Customer needs to use a different bank account, preferably at a different bank.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.MandatoryFieldError">
            <summary>
            Bank system error. Customer needs to use a different bank account, preferably at a different bank.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.TraceNumberError">
            <summary>
            Bank system error. Customer needs to use a different bank account, preferably at a different bank.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.TransitRoutingNumberCheckDigitError">
            <summary>
            Bank system error. Customer needs to use a different bank account, preferably at a different bank.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.CorporateCustomerAdvisedNotAuthorized">
            <summary>
            Bank rejected payment request, no follow-up suggested.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.RdfiNotParticipantInCheckTruncationProgram">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.PermissibleReturnEntry">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.ReceivingBankNonSettlement">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.ReturnOfItem">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.LimitedParticipationOriginatingBank">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.ReturnOfImproperDebitEntry">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.ReturnOfImproperCreditEntry">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.SourceDocumentPresentedForPayment">
            <summary>
            Bank system error. Customer needs to use a different bank account, preferably at a different bank.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.StopPaymentOnSourceDocument">
            <summary>
            Bank system error. Customer needs to use a different bank account, preferably at a different bank.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.ImproperSourceDocument">
            <summary>
            Bank system error.
            Customer needs to use a different bank account, preferably at a different bank.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.ReturnOfItemByGovernmentAgency">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.InvalidTransactionCode">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.RoutingOrTransitNumberCheckDigitError">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.InvalidDfiAccountNumber">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.InvalidIndividualIdNumber">
            <summary>
            Bank system error. Customer needs to use a different bank account, preferably at a different bank.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.InvalidIndividualOrCompanyName">
            <summary>
            Bank system error. Customer needs to use a different bank account, preferably at a different bank.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.InvalidPayeeIndicatorCode">
            <summary>
            Bank system error. Customer needs to use a different bank account, preferably at a different bank.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.DuplicateEnrollment">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.StateLawAffectingRckAcceptance">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.ItemIneligibleNoticeNotProvidedSignatureNotGenuineOrOriginalItemAlteredForAdjustmentEntry">
            <summary>
            Bank system error. Customer needs to use a different bank account, preferably at a different bank.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.StopPaymentOnItem">
            <summary>
            Bank system error. Customer needs to use a different bank account, preferably at a different bank.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.ItemAndAchEntryPresentedForPayment">
            <summary>
            Bank system error. Customer needs to use a different bank account, preferably at a different bank.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.MisroutedReturnRdfiHasPlacedIncorrectRoutingOrTransitNumberInRdfiIdField">
            <summary>
            Bank system error. Customer needs to use a different bank account, preferably at a different bank.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.DuplicateReturn">
            <summary>
            Bank system error. Customer needs to use a different bank account, preferably at a different bank.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.UntimelyReturnTheReturnWasNotSentWithinTheEstablishedTimeframe">
            <summary>
            Bank system error. Customer needs to use a different bank account, preferably at a different bank.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.FieldErrors">
            <summary>
            Bank system error. Customer needs to use a different bank account, preferably at a different bank.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.PermissibleReturnEntryNotAccepted">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.MisroutedDishonoredReturnIncorrectRoutingOrTransitNumberInRdfiIdField">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.UntimelyReturnDishonoredReturnWasNotSentWithinTheEstablishedTimeframe">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.R73">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.CorrectedReturnRdfiIsCorrectingAPreviousReturnEntryThatWasDishonoredBecauseItContainedIncompleteOrIncorrectInformation">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.OriginalReturnNotADuplicate">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.NoErrorsFound">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.CrossBorderPaymentCodingError">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.NonParticipantInCrossBorderProgram">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.InvalidForeignRdfiIdentification">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.ForeignRdfiUnableToSettle">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.CrossBorderEntryNotProcessedByOriginatingGatewayOperator">
            <summary>
            Payer needs to resubmit payment with updated account information or a new account.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.AdministrativeReturnItemWasProcessedAndResubmittedAsAPhotocopy">
            <summary>
            Bank system error. Customer needs to use a different bank account, preferably at a different bank.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.AdministrativeReturnItemWasProcessedAndResubmittedAsAMicrSplit">
            <summary>
            Bank system error. Customer needs to use a different bank account, preferably at a different bank.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.AdministrativeReturnItemWasProcessedAndResubmittedWithCorrectedDollarAmount">
            <summary>
            Bank system error. Customer needs to use a different bank account, preferably at a different bank.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.IndicatesAReturnPreAuthorizedCheckRdfiProvidesATextReasonAndIndicatedANewAccountNumberOnThePacItself">
            <summary>
            Bank system error. Customer needs to use a different bank account, preferably at a different bank.
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentBankPaymentErrors.IndicatesAReturnPreAuthorizedCheckRdfiProvidesATextReasonOnThePacItselfForWhichThereIsNoEquivalentReturnReasonCode">
            <summary>
            Bank system error. Customer needs to use a different bank account, preferably at a different bank.
            </summary>
        </member>
        <member name="T:WePay.Checkout.Common.PaymentTypes">
            <summary>
            All Payment Types currently supported by WePay
            </summary>
        </member>
        <member name="T:WePay.Checkout.Common.PaymentTypes.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Checkout.Common.PaymentTypes.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.CancelRequest.CheckoutId">
            <summary>
            The unique ID of the checkout to be canceled.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.CancelRequest.CancelReason">
            <summary>
            The reason the payment is being cancelled.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.CreateRequest.AccountId">
            <summary>
            The unique ID of the account for which you want to create a checkout.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.CreateRequest.ShortDescription">
            <summary>
            A short description of what is being paid for.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.CreateRequest.Type">
            <summary>
            The checkout type.
            (Enumeration of these values can be found in WePay.Checkout.Common.CheckoutTypes)
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.CreateRequest.Amount">
            <summary>
            The nominal amount of the transaction (not including any processing fees or application fees).
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.CreateRequest.Currency">
            <summary>
            The currency used.
            (Enumeration of these values can be found in WePay.Shared.Common.Currencies)
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.CreateRequest.LongDescription">
            <summary>
            A more detailed description of the purchased goods or services.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.CreateRequest.EmailMessage">
            <summary>
            Specifies a short message to send to the payee and payer when a checkout is successful.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.CreateRequest.Fee">
            <summary>
            Specifies whether an app fee will be collected and who should pay the app fee.
            Note that for EMV (chip type cards) transactions, this parameter must be present.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.CreateRequest.CallbackUri">
            <summary>
            The URI that will receive any instant payment notifications sent.
            Needs to be a full URI (e.g., https://www.example.com ) and must not be localhost or 127.0.0.1, nor may it include wepay.com.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.CreateRequest.AutoRelease">
            <summary>
            If set to false then the payment will not automatically be released to the account and will be held by WePay in payment state captured.
            To release funds to the account you must make a Release call.
            If you do not release the funds within 14 days, then the payment will be automatically cancelled or refunded.
            Default: true
            PERMISSION REQUIRED
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.CreateRequest.ReferenceId">
            <summary>
            Partner supplied reference ID for this checkout.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.CreateRequest.UniqueId">
            <summary>
            Customer-generated unique ID. WePay will only process a single call with a given UniqueId. Platforms can use this to prevent duplicates ( e.g., when retrying if a call times out).
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.CreateRequest.HostedCheckout">
            <summary>
            Use this to have payers enter payment information on a WePay hosted checkout URL.
            Send either HostedCheckout or PaymentMethod parameter.
            Do not send both parameters at the same time.
            Default: HostedCheckout
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.CreateRequest.PaymentMethod">
            <summary>
            Use this to pay with information your platform acquired through CreditCard or PaymentBank calls.
            Send either HostedCheckout or PaymentMethod parameter.
            Do not send both parameters at the same time.
            Default: HostedCheckout
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.CreateRequest.DeliveryType">
            <summary>
            Delivery type for checkout.
            (Enumeration of these values can be found in WePay.Checkout.Common.DeliveryTypes)
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.CreateRequest.PayerRbits">
            <summary>
            Risk information related to payer.
            Expects
            1) AddressRbit (Service Address)
            2) PhoneRbit
            3) EmailRbit
            4) PersonRbit
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.CreateRequest.TransactionRbits">
            <summary>
            Risk information related to transaction
            Expects
            1) TransactionRbit
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.FindRequest.AccountId">
            <summary>
            The unique ID of the account whose checkouts you are searching.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.FindRequest.Start">
            <summary>
            The start position for your search.
            Default: 0
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.FindRequest.Limit">
            <summary>
            The maximum number of returned entries.
            Default: 50
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.FindRequest.ReferenceId">
            <summary>
            The unique ID of the checkout (set by the application in a Checkout Create call)
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.FindRequest.State">
            <summary>
            The current state of the checkout.
            (Enumeration of these values can be found in WePay.Checkout.Common.CheckoutStates)
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.FindRequest.PreapprovalId">
            <summary>
            The unique ID for the preapproval used to create this checkout.
            Note: Useful if you want to look up all the payments for a recurring preapproval (using the AutoRecur parameter).
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.FindRequest.StartTime">
            <summary>
            All checkouts after given start time, Unix timestamp (UTC)
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.FindRequest.EndTime">
            <summary>
            All checkouts before given end time, Unix timestamp (UTC)
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.FindRequest.SortOrder">
            <summary>
            Sort the results of the search by time created.
            Use desc for most recent to least recent. Use asc for least recent to most recent.
            (Enumeration of these values can be found in WePay.Shared.Common.SortOrders)
            Default: desc
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.FindRequest.ShippingFee">
            <summary>
            All checkouts that have the given shipping fee.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.LookupRequest.CheckoutId">
            <summary>
            The unique ID of the checkout you want to look up.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.ModifyRequest.CheckoutId">
            <summary>
            The unique ID of the checkout you want to modify.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.ModifyRequest.CallbackUri">
            <summary>
            The URI that will receive any instant payment notifications sent.
            Needs to be a full URI (ex https://www.example.com ) and must not be localhost or 127.0.0.1 or include wepay.com.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.RefundRequest.CheckoutId">
            <summary>
            The unique ID of the checkout to be refunded.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.RefundRequest.RefundReason">
            <summary>
            The reason the payment is being refunded.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.RefundRequest.Amount">
            <summary>
            The total amount that will be refunded back to the payer.
            Note that this amount must be less than the net of the transaction.
            To perform a full refund, do not pass the amount parameter.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.RefundRequest.AppFee">
            <summary>
            The portion of the amount that will be refunded as an AppFee refund.
            For example, if amount is 100.00 and AppFee is 10.00, then the payer will receive a refund of 100.00,
            where 90.00 is the net refund from the payment account, and 10.00 is the AppFee refund.
            Note that this value must be less than the remaining balance of the app fee.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.RefundRequest.PayerEmailMessage">
            <summary>
            A short message that will be included in the payment refund email to the payer.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Request.RefundRequest.PayeeEmailMessage">
            <summary>
            A short message that will be included in the payment refund email to the payee.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.LookupResponse.CheckoutId">
            <summary>
            The unique ID of the checkout.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.LookupResponse.AccountId">
            <summary>
            The unique ID of the account that the money will go into.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.LookupResponse.Type">
            <summary>
            The checkout type.
            (Enumeration of these values can be found in WePay.Checkout.Common.CheckoutTypes)
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.LookupResponse.CreateTime">
            <summary>
            The Unix timestamp (UTC) when the checkout was created.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.LookupResponse.State">
            <summary>
            The state the checkout is in.
            (Enumeration of these values can be found in WePay.Checkout.Common.CheckoutStates)
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.LookupResponse.SoftDescriptor">
            <summary>
            The payment description that will show up on payer's credit card statement.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.LookupResponse.CallbackUri">
            <summary>
            The URI to which IPNs are sent.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.LookupResponse.ShortDescription">
            <summary>
            A short description of the checkout.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.LookupResponse.LongDescription">
            <summary>
            A longer, more detailed, description of the checkout (if available).
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.LookupResponse.Currency">
            <summary>
            The currency used.
            (Enumeration of these values can be found in WePay.Shared.Common.Currencies)
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.LookupResponse.Amount">
            <summary>
            The dollar amount of the Checkout (e.g., 3.20).
            This will always be the amount you passed in the Create call.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.LookupResponse.Fee">
            <summary>
            Specifies whether an app fee was collected and who (the app or customer) paid for it.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.LookupResponse.Gross">
            <summary>
            The total dollar amount paid by the payer.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.LookupResponse.AutoRelease">
            <summary>
            If set to false then the payment will not automatically be released to the account and will be held by WePay in payment state captured.
            To release funds to the account you must make a Release call.
            If you do not release the funds within 14 days, then the payment will be automatically cancelled or refunded.
            Default: true
            PERMISSION REQUIRED
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.LookupResponse.InReview">
            <summary>
            Indicates whether the checkout is under review by the WePay risk team or not.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.LookupResponse.Chargeback">
            <summary>
            Specifies the amount charged back and the dispute URL.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.LookupResponse.ReferenceId">
            <summary>
            The unique ID passed by the application (if available).
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.LookupResponse.Refund">
            <summary>
            Specifies the amount refunded and the reason for refund.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.LookupResponse.PaymentMethod">
            <summary>
            Specifies the payment method used for the checkout.
            Note that only one of either PaymentMethod or HostedCheckout may be present.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.LookupResponse.HostedCheckout">
            <summary>
            Specifies CheckoutUri, RedirectUri, Shipping Information, and Process Mode (whether the checkout was displayed in an iframe or not).
            Note that only one of either PaymentMethod or HostedCheckout may be present.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.LookupResponse.Payer">
            <summary>
            Payer information, returned if payment was made.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.LookupResponse.DeliveryType">
            <summary>
            Delivery type for checkout.
            (Enumeration of these values can be found in WePay.Checkout.Common.DeliveryTypes)
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.LookupResponse.NpoInformation">
            <summary>
            If the payee is a non profit entity, the structure contains information about non profit organization.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.LookupResponse.PaymentError">
            <summary>
            If there is an error regarding the payment and WePay has additional information to pass back, this will contain that information.
            At present, only Pay With Bank (ACH) transactions may have additional information.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.LookupResponse.PaymentRbitIds">
            <summary>
            Array of rbit ids associated with the checkout payer.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.LookupResponse.TransactionRbitIds">
            <summary>
            Array of rbit ids associated with the checkout transaction.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.StateResponse.CheckoutId">
            <summary>
            The unique ID of the checkout that was successfully cancelled or refunded
            </summary>
        </member>
        <member name="P:WePay.Checkout.Response.StateResponse.State">
            <summary>
            The state the payment is in.
            (Enumeration of these values can be found in WePay.Checkout.Common.CheckoutStates)
            </summary>
        </member>
        <member name="T:WePay.Checkout.Structure.ChargebackResponse">
            <summary>
            A chargeback occurs when a customer questions your charge with their bank or credit card company.
            When a customer disputes your charge, you are given the opportunity to respond to the dispute with evidence that shows
            the charge is legitimate.
            The chargeback object specifies whether there was a chargeback and the amount charged back.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.ChargebackResponse.AmountChargedBack">
            <summary>
            If this checkout has been fully or partially charged back, this is the amount that has been charged back so far.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.ChargebackResponse.DisputeUri">
            <summary>
            The URI that payers can visit to open a dispute for this checkout. 
            Do not store the returned URI on your side as it can change.
            </summary>
        </member>
        <member name="T:WePay.Checkout.Structure.Fee">
            <summary>
            Specifies the App Fee and Fee Payer parameters for a checkout.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.Fee.AppFee">
            <summary>
            The dollar amount that the application will receive in fees.
            App fees go into the API applications W
            Default: 0
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.Fee.FeePayer">
            <summary>
            Who will pay the fees (WePay's fees and any app fees).
            (Enumeration of these values can be found in WePay.Checkout.Common.FeePayers)
            For EMV transactions the value must be either payee or payee_from_app.
            Default: Payer
            </summary>
        </member>
        <member name="T:WePay.Checkout.Structure.FeeResponse">
            <summary>
            Contains information about the App Fee, processing fee paid to WePay, and Fee Payer.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.FeeResponse.AppFee">
            <summary>
            The dollar amount that the application will receive in fees.
            App fees go into the API applications WePay account.
            Limited to 20% of the checkout amount.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.FeeResponse.ProcessingFee">
            <summary>
            The dollar amount paid to WePay as a fee.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.FeeResponse.FeePayer">
            <summary>
            Who will pay the fees(WePay's fees and any app fees).
            (Enumeration of these values can be found in WePay.Checkout.Common.FeePayers)
            </summary>
        </member>
        <member name="T:WePay.Checkout.Structure.HostedCheckout">
            <summary>
            Use this to have payers enter payment information on a WePay hosted checkout URL.
            Send either HostedChecout or PaymentMethod parameter.
            Do not send both parameters at the same time.
            If neither parameter is specified, default behavior will be HostedCheckout.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.HostedCheckout.RedirectUri">
            <summary>
            The URI the payer will be redirected to after payment (if available).
            If you do not pass a RedirectUri, the user will see a payment confirmation page
            (and if you are using the iFrame we will send a postMessage to the parent window indicating that the payment is complete).
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.HostedCheckout.Mode">
            <summary>
            What mode the checkout will be displayed in.
            The options are iframe or regular.
            Choose iframe if this is an iframe checkout.
            Default: regular
            (Enumeration of these values can be found in WePay.Shared.Common.ProcessModes)
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.HostedCheckout.FallbackUri">
            <summary>
            The URI used to redirect the payer if 3rd party cookies are not enabled for iframes.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.HostedCheckout.ShippingFee">
            <summary>
            The amount to be charged for shipping the item.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.HostedCheckout.RequireShipping">
            <summary>
            If set to true, then the payer will be required to enter their shipping address when paying.
            Default: false
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.HostedCheckout.PrefillInfo">
            <summary>
            Information about payer to pre-fill certain fields in checkout flow.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.HostedCheckout.FundingSources">
            <summary>
            What payment method to accept for this checkout.
            Must be sent as an array.
            (Enumeration of these values can be found in WePay.Checkout.Common.FundingSources)
            For example, if only "credit_card" is selected, customers will see option to pay by credit card when they go to the
            WePay hosted checkout URL.
            They will not be able to pay using their bank account.
            If the FundingSources parameter is not specified, both credit card and bank account payments will be accepted in the checkout flow.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.HostedCheckout.ThemeObject">
            <summary>
            The theme structure contains information to provide custom look-and-feel for the flows and emails.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.HostedCheckoutResponse.CheckoutUri">
            <summary>
            The URI for the Checkout.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.HostedCheckoutResponse.Mode">
            <summary>
            What mode the checkout was displayed in.
            (Enumeration of these values can be found in WePay.Shared.Common.ProcessModes)
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.HostedCheckoutResponse.RedirectUri">
            <summary>
            The URI the payer will be redirected to after payment (if available).
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.HostedCheckoutResponse.ShippingFee">
            <summary>
            The amount to be charged for shipping the item.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.HostedCheckoutResponse.RequireShipping">
            <summary>
            If set to true, then the payer was required to enter their shipping address when paying.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.HostedCheckoutResponse.ShippingAddress">
            <summary>
            If RequireShipping was set to true and the payment was made, this will be the shipping address that the payer entered.
            If this value is null then either RequireShipping is false, or the payer has not yet completed checkout.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.HostedCheckoutResponse.ThemeObject">
            <summary>
            The theme structure contains information to provide custom look-and-feel for the flows and emails.
            </summary>
        </member>
        <member name="T:WePay.Checkout.Structure.NonProfitInformation">
            <summary>
            This structure contains information about a non profit entity
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.NonProfitInformation.LegalName">
            <summary>
            Legal name of the non-profit entity.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.NonProfitInformation.Ein">
            <summary>
            Employer Identification Number of the non-profit entity.
            </summary>
        </member>
        <member name="T:WePay.Checkout.Structure.PayerResponse">
            <summary>
            Contains information about the payer such as their name, email, and home address.
            This object is returned only if a payment has been made.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.PayerResponse.Name">
            <summary>
            The name of the person paying.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.PayerResponse.Email">
            <summary>
            The email address of the person paying.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.PayerResponse.HomeAddress">
            <summary>
            The home address of the person paying.
            </summary>
        </member>
        <member name="T:WePay.Checkout.Structure.PaymentBankPaymentError">
            <summary>
            This structure contains additional information related to the payment bank payment error that occurred on a checkout.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.PaymentBankPaymentError.Code">
            <summary>
            The bank account code.
            (Enumeration of these values can be found in WePay.Checkout.Common.PaymentBankPaymentErrors)
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.PaymentBankPaymentError.Description">
            <summary>
            A description of what the code means.
            See below for the mapping of the list of codes to their descriptions.
            </summary>
        </member>
        <member name="T:WePay.Checkout.Structure.PaymentError">
            <summary>
            This structure contains additional information about a payment error that occurred on a checkout.
            At present, only Pay With Bank (ACH) transactions may have additional information.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.PaymentError.Type">
            <summary>
            The error type.
            This is set to payment_bank and matches the corresponding object type below.
            (Enumeration of these values can be found in WePay.Checkout.Common.PaymentTypes)
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.PaymentError.PaymentBank">
            <summary>
            Information regarding the error regarding the payment using a bank account.
            </summary>
        </member>
        <member name="T:WePay.Checkout.Structure.PaymentMethod">
            <summary>
            Send the payment method object to pay for a checkout using previously acquired payment information,
            such as a credit card (for tokenization) or preapproval (Depreated).
            Based on the type, only specify payment_bank, credit_card, or preapproval parameters.
            For example, if the payment method has type = credit_card, specify the credit_card parameter and do not specify the preapproval.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.PaymentMethod.Type">
            <summary>
            Payment Method type.
            (Enumeration of these values can be found in WePay.Checkout.Common.PaymentTypes)
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.PaymentMethod.PaymentBank">
            <summary>
            Specifies the payment bank.
            Required if Type is PaymentBank.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.PaymentMethod.CreditCard">
            <summary>
            Specifies the credit card.
            Required if Type is CreditCard.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.PaymentMethod.Preapproval">
            <summary>
            [DEPRECATED] Specifies the preapproval.
            Required if Type is Preapproval.
            </summary>
        </member>
        <member name="T:WePay.Checkout.Structure.PaymentMethodResponse">
            <summary>
            Contains information about the payment method used.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.PaymentMethodResponse.Type">
            <summary>
            Payment Method type used in payment.
            Can be credit_card or payment_bank.
            (Enumeration of these values can be found in WePay.Shared.Checkout.PaymentTypes)
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.PaymentMethodResponse.CreditCard">
            <summary>
            Object that specifies the credit card used in payment.
            Available if type is credit_card.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.PaymentMethodResponse.PaymentBank">
            <summary>
            Object that specifies the payment bank used in payment.
            Available if type is payment_bank.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.PaymentMethodResponse.Preapproval">
            <summary>
            [DEPRECATED] The preapproval ID from the Preapproval Create call.
            </summary>
        </member>
        <member name="T:WePay.Checkout.Structure.PaymentsPrefillInfo">
            <summary>
            Specifies prefill information for checkout, preapprovals, and subscription flows.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.PaymentsPrefillInfo.Name">
            <summary>
            The name of the person.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.PaymentsPrefillInfo.Email">
            <summary>
            The email address of the person.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.PaymentsPrefillInfo.PhoneNumber">
            <summary>
            The phone number of the person.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.PaymentsPrefillInfo.Address">
            <summary>
            The street address.
            </summary>
        </member>
        <member name="T:WePay.Checkout.Structure.Preapproval">
            <summary>
            Object that specifies unique ID of the preapproval associated with the checkout.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.Preapproval.Id">
            <summary>
            Preapproval ID from Preapproval Create.
            </summary>
        </member>
        <member name="T:WePay.Checkout.Structure.RefundResponse">
            <summary>
            The refund object contains information about the amount refunded and reason for the refund.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.RefundResponse.AmountRefunded">
            <summary>
            If this checkout has been fully or partially refunded, this has the amount that has already been refunded.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.RefundResponse.RefundReason">
            <summary>
            If the payment was refunded the reason why.
            </summary>
        </member>
        <member name="T:WePay.Checkout.Structure.EmailMessage">
            <summary>
            Specifies a short message to send to the payee and payer when a checkout is successful.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.EmailMessage.ToPayee">
            <summary>
            A short message that will be included in the payment confirmation email to the payee.
            </summary>
        </member>
        <member name="P:WePay.Checkout.Structure.EmailMessage.ToPayer">
            <summary>
            A short message that will be included in the payment confirmation email to the payer.
            </summary>
        </member>
        <member name="T:WePay.CreditCard.Common.CreditCardStates">
            <summary>
            All possible Credit Card states recognized by WePay
            </summary>
        </member>
        <member name="T:WePay.CreditCard.Common.CreditCardStates.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.CreditCard.Common.CreditCardStates.New">
            <summary>
            The credit card was just created by the application.
            </summary>
        </member>
        <member name="F:WePay.CreditCard.Common.CreditCardStates.Authorzied">
            <summary>
            The credit card was authorized either with an immediate charge or the CreditCard Authorize call.
            You can use the CreditCardId to charge this card in the future.
            </summary>
        </member>
        <member name="F:WePay.CreditCard.Common.CreditCardStates.Expired">
            <summary>
            The credit card was created but you did not charge the card or call CreditCard Authorize within 30 minutes.
            </summary>
        </member>
        <member name="F:WePay.CreditCard.Common.CreditCardStates.Deleted">
            <summary>
            The credit card was deleted or there was a failed credit card authorization attempt.
            </summary>
        </member>
        <member name="F:WePay.CreditCard.Common.CreditCardStates.Invalid">
            <summary>
            You tried to charge the card but the response we received indicated that the card is completely invalid and can never be charged
            (e.g., AVS mismatch, also known as a billing address check failure).
            </summary>
        </member>
        <member name="F:WePay.CreditCard.Common.CreditCardStates.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.CreditCard.Common.InputSources">
            <summary>
            All possible methods of accepting CreditCard information
            </summary>
        </member>
        <member name="T:WePay.CreditCard.Common.InputSources.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.CreditCard.Common.InputSources.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.CreditCard.Common.VirtualTerminalModes">
            <summary>
            All possible virtual terminal modes
            </summary>
        </member>
        <member name="T:WePay.CreditCard.Common.VirtualTerminalModes.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.CreditCard.Common.VirtualTerminalModes.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.CreditCard.CreditCardService">
            <summary>
            The CreditCard object represents a user’s credit card and can be used to tokenize credit cards
            While WePay CC Tokenization API greatly reduces the scope of PCI Compliance and increases your security,
            your application is still required to be compliant with the Payment Card Industry Data Security Standards (PCI-DSS) and the Payment Application Data Security Standards (PA-DSS) whenever applicable.
            If you want to minimize the scope of your PCI compliance, we recommend that you use our iframe checkout.
            Use of the credit card tokenization feature requires special approval from WePay. Please apply for approval on your application’s dashboard.
            For more information about PCI standards and compliance, see the following link: https://www.pcisecuritystandards.org/.
            </summary>
        </member>
        <member name="M:WePay.CreditCard.CreditCardService.CreateAsync(WePay.CreditCard.Request.CreateRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            This call allows you to pass credit card information and receive back a CreditCardId.
            You will then be able to use that CreditCardId on the Checkout Create call to execute a payment immediately with that credit card.
            Note that you will need to call the Checkout Create call or the CreditCard Authorize call within 30 minutes or the CreditCard object will expire.
            The credit card created by the CreditCard Create call is tokenized and the card details are immutable.
            TIP: If you pass an accessToken on this call, the credit card will be added to the user associated with that accessToken.
            If you want to do a guest payment(ie the payer is not registered on WePay), then do not pass an accessToken.
            TIP: User contact information(especially e-mail) is key for risk analysis, so please make sure you provide the actual end-user contact information.
            PERMISSION REQUIRED: Cvv is optional only if the app has the correct permissions.
            Please speak to your account manager for more information.
            </summary>
            <param name="createResponse"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.CreditCard.CreditCardService.LookupAsync(WePay.CreditCard.Request.LookupRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to lookup the details of a credit card that you have tokenized.
            </summary>
            <param name="lookupRequest"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.CreditCard.CreditCardService.AuthorizeAsync(WePay.CreditCard.AuthorizeRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            You should only use this call if you are not going to immediately make the Checkout Create call with the CreditCardId.
            This call authorizes the card and allows you use it at a later time or date(for crowdfunding, subscriptions, etc.).
            If you don’t call CreditCard Authorize or Checkout Create within 30 minutes, the CreditCard object will expire.
            </summary>
            <param name="authorizeRequest"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.CreditCard.CreditCardService.FindAsync(WePay.CreditCard.Request.FindRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to search through tokenized credit cards.
            The response is an array of credit cards matching the search parameters. 
            </summary>
            <param name="findRequest"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.CreditCard.CreditCardService.ModifyAsync(WePay.CreditCard.ModifyRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to make modifications to an existing tokenized credit card. 
            </summary>
            <param name="modifyRequest"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.CreditCard.CreditCardService.TransferAsync(WePay.CreditCard.Request.TransferRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            This call is similar to CreditCard Create.
            It is intended to be used server-server for the purpose of migrating credit card information to WePay.
            If AutoAuthorize is set to true, WePay will automatically test cards transferred to us via CreditCard Transfer by making a $0.00 authorization (in rare instances, the authorization amount may be $1.00 instead).
            All payment error codes (200X) are possible return values for CreditCard Transfer.
            PERMISSION REQUIRED
            </summary>
            <param name="transferRequest"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.CreditCard.CreditCardService.DeleteAsync(WePay.CreditCard.Request.DeleteRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Delete the credit card when you don’t need it anymore.
            TIP: Once a credit card is deleted the card will no longer be available to make payments.
            WARNING: Do not delete a credit card before the state of the Checkout == captured.
            </summary>
            <param name="deleteRequest"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.CreditCard.CreditCardService.EnableRecurringAsync(WePay.CreditCard.Request.EnableRecurringRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Enable an EMV card to make recurring payments.
            WARNING: If you intend to make a charge on the physically present card,
            do not call EnableRecurring until after the original Checkout Create call has been made successfully against the card present checkout.
            </summary>
            <param name="enableRecurringRequest"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="P:WePay.CreditCard.AuthorizeRequest.ClientId">
            <summary>
            The ID for your API application. You can find it on your application dashboard.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.AuthorizeRequest.ClientSecret">
            <summary>
            The secret for your API application. You can find it on your application dashboard.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.AuthorizeRequest.CreditCardId">
            <summary>
            The unique ID of the credit card you want to authorize.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.AuthorizeRequest.AccountId">
            <summary>
            The unique ID of the account that will be associated with transactions made with the credit card.
            If specified, the account name will be part of the soft descriptor in the payer's bank statement.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.CreateRequest.ClientId">
            <summary>
            The ID for your API application. You can find it on your app dashboard.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.CreateRequest.CcNumber">
            <summary>
            The number on the credit card.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.CreateRequest.ExpirationMonth">
            <summary>
            The expiration month on the credit card.
            Expects a number in the range of 1 - 12
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.CreateRequest.ExpirationYear">
            <summary>
            The expiration year on the credit card.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.CreateRequest.UserName">
            <summary>
            The full name of the user that the card belongs to.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.CreateRequest.Email">
            <summary>
            Valid email address of the user the card belongs to.
            If the e-mail belongs to the merchant, your application's user account, or is invalid, the transaction may be canceled for risk reasons.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.CreateRequest.Address">
            <summary>
            The billing address on the card. Only PostalCode and Country are required.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.CreateRequest.Cvv">
            <summary>
            The CVV (also known as a card security code, CVV2, or CVC) on the card.
            PERMISSION REQUIRED: This parameter is only optional when the app has the correct permissions.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.CreateRequest.OriginalIp">
            <summary>
            The IP address of the user to whom this card belongs.
            This should be sent if you are not using WePay's Javascript library.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.CreateRequest.OriginalDevice">
            <summary>
            The user-agent (for web) or the IMEI (for mobile) of the user to whom his card belongs.
            This should be sent if you are not using WePay's Javascript library.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.CreateRequest.ReferenceId">
            <summary>
            The unique reference ID of the CreditCard.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.CreateRequest.AutoUpdate">
            <summary>
            Automatically update credit cards that have been stored with WePay.
            If a card is expired, or has been replaced (e.g., due to theft), it will be automatically updated based in information provided by card networks.
            To receive these updates, be sure to set a CallbackUri.
            PERMISSION REQUIRED
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.CreateRequest.CallbackUri">
            <summary>
            The URI that will receive IPNs for this credit card.
            You will receive an IPN whenever the card information is updated.
            REQUIRED IF AutoUpdate is true
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.CreateRequest.VirtualTerminal">
            <summary>
            This is set if the merchant has manually entered the credit card number.
            (Enumeration of these values can be found in WePay.CreditCard.Common.VirtualTerminalModes)
            PERMISSION REQUIRED
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.CreateRequest.PaymentRequestFlag">
            <summary>
            This is set if the credit card was obtained using the W3C Payment Request API.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.DeleteRequest.ClientId">
            <summary>
            The ID for your API application.
            You can find it on your app dashboard.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.DeleteRequest.ClientSecret">
            <summary>
            The secret for your API application.
            You can find it on your app dashboard.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.DeleteRequest.CreditCardId">
            <summary>
            The unique ID of the credit card you want to delete.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.EnableRecurringRequest.ClientId">
            <summary>
            The ID for your API application.
            You can find it on your app dashboard.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.EnableRecurringRequest.ClientSecret">
            <summary>
            The secret for your API application.
            You can find it on your app dashboard.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.EnableRecurringRequest.CreditCardId">
            <summary>
            The unique ID of the credit card.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.EnableRecurringRequest.Address">
            <summary>
            The billing address on the card.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.FindRequest.ClientId">
            <summary>
            The ID for your API application. You can find it on your app dashboard.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.FindRequest.ClientSecret">
            <summary>
            The secret for your API application. You can find it on your app dashboard.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.FindRequest.ReferenceId">
            <summary>
            The reference ID of the credit card you want to find.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.FindRequest.Limit">
            <summary>
            The maximum number of results you want returned.
            Default: 50
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.FindRequest.Start">
            <summary>
            The start position for your search.
            Default: 0
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.FindRequest.SortOrder">
            <summary>
            Sort the results of the search by time created. Use desc for most recent to least recent
            Use asc for least recent to most recent.
            Default: desc
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.LookupRequest.ClientId">
            <summary>
            The ID for your API application. You can find it on your application's dashboard.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.LookupRequest.ClientSecret">
            <summary>
            The secret for your API application. You can find it on your application's dashboard.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.LookupRequest.CreditCardId">
            <summary>
            The unique ID of the credit card you want to look up.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.TransferRequest.ClientId">
            <summary>
            The ID for your API application. You can find it on your app dashboard.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.TransferRequest.ClientSecret">
            <summary>
            The secret for your API application.
            You can find it on your app dashboard.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.TransferRequest.CcNumber">
            <summary>
            The number on the credit card.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.TransferRequest.ExpirationMonth">
            <summary>
            The expiration month of the credit card.
            Expects a value between 1 and 12
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.TransferRequest.ExpirationYear">
            <summary>
            The expiration year of the credit card.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.TransferRequest.UserName">
            <summary>
            The full name of the user to whom the card belongs.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.TransferRequest.Email">
            <summary>
            The email address of the user to whom the card belongs.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.TransferRequest.Address">
            <summary>
            The billing address on the card.
            Only PostalCode and Country are required.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.TransferRequest.ReferenceId">
            <summary>
            The unique reference ID of the credit card.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Request.TransferRequest.AutoAuthorize">
            <summary>
            The parameter that indicates whether to make a $0 authorization on the credit card being transferred.
            Default: false
            </summary>
        </member>
        <member name="P:WePay.CreditCard.ModifyRequest.ClientId">
            <summary>
            The ID for your API application.
            You can find it on your app dashboard.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.ModifyRequest.ClientSecret">
            <summary>
            The secret for your API application.
            You can find it on your app dashboard.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.ModifyRequest.CreditCardId">
            <summary>
            The unique ID of the credit card you want to modify.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.ModifyRequest.AutoUpdate">
            <summary>
            Automatically update credit cards that have been stored with WePay.
            If a card is expired, or has been replaced (e.g., due to theft), it will be automatically updated based in information provided by card networks.
            To receive these updates, be sure to set a CallbackUri.
            PERMISSION REQUIRED
            </summary>
        </member>
        <member name="P:WePay.CreditCard.ModifyRequest.CallbackUri">
            <summary>
            The URI that will receive IPNs for this credit card.
            You will receive an IPN whenever the card information is updated.
            REQUIRED IF AutoUpdate is true
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Response.LookupResponse.CreditCardId">
            <summary>
            The unique ID of a credit card.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Response.LookupResponse.CreditCardName">
            <summary>
            The string that identifies a credit card, such as MasterCard xxxxxx4769
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Response.LookupResponse.State">
            <summary>
            The state that the credit card is in.
            (Enumeration of these values can be found in WePay.CreditCard.Common.CreditCardStates)
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Response.LookupResponse.UserName">
            <summary>
            The name on the card (e.g., Bob Smith).
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Response.LookupResponse.Email">
            <summary>
            The email address of the user who owns the card.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Response.LookupResponse.CreateTime">
            <summary>
            The Unix timestamp (UTC) when the credit card was created.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Response.LookupResponse.InputSource">
            <summary>
            The input source of the credit card.
            (Enumeration of these values can be found in WePay.CreditCard.Common.InputSources)
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Response.LookupResponse.VirtualTerminalMode">
            <summary>
            The virtual terminal mode of the credit card.
            (Enumeration of these values can be found in WePay.CreditCard.Common.VirtualTerminalModes)
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Response.LookupResponse.ReferenceId">
            <summary>
            The unique ID for the credit card.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Response.LookupResponse.ExpirationMonth">
            <summary>
            The expiration month on the credit card.
            Possible values: integers between 1 and 12.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Response.LookupResponse.ExpirationYear">
            <summary>
            The expiration year on the credit card.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Response.LookupResponse.Bin">
            <summary>
            Bank identification number. The initial six digits of a credit card number. null is returned if BIN is not available. 
            When the InputSource is ApplePay or AndroidPay, BIN is a virtual value and should not be considered as the actual BIN number.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Response.LookupResponse.LastFour">
            <summary>
            The last four digits of the credit card number.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Response.LookupResponse.BackingInstrumentName">
            <summary>
            The backing instrument for the credit card such as Visa 2149.
            Value exists for digital wallet payments, null otherwise.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Response.SimpleResponse.CreditCardId">
            <summary>
            The unique ID of the credit card.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Response.StateResponse.CreditCardId">
            <summary>
            The unique ID of the credit card.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Response.StateResponse.State">
            <summary>
            The unique ID of the credit card.
            (Enumeration of these values can be found in WePay.CreditCard.Common.CreditCardStates)
            </summary>
        </member>
        <member name="T:WePay.CreditCard.Structure.CreditCard">
            <summary>
            The Credit Card Structure object specifies the credit card ID used for tokenization.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Structure.CreditCard.Id">
            <summary>
            Credit card ID from CreditCard Create.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Structure.CreditCard.Data">
            <summary>
            Structure for passing in additional credit card information.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Structure.CreditCard.AutoCapture">
            <summary>
            If present and set to false, the credit card will not be automatically charged (will only be authorized)
            and the associated Checkout will not progress past the state of 'Authorized' until a call to Checkout Capture is made,
            or if 7 days pass without having called Checkout Capture, the associated checkout will transition to state 'Cancelled'.
            Default: true
            </summary>
        </member>
        <member name="T:WePay.CreditCard.Structure.CreditCardAdditionalData">
            <summary>
            Object that specifies additional credit card data.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Structure.CreditCardAdditionalData.TransactionToken">
            <summary>
            Used for making a checkout call if the credit card was EMV enabled.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Structure.CreditCardAdditionalData.EmvReceipt">
            <summary>
            Structure containing receipt information for EMV transactions. This parameter should not be added to requests.
            It will only be present in response structures. (only present in API response)
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Structure.CreditCardAdditionalData.SignatureUrl">
            <summary>
            Signature image URL. (only present in API response)
            </summary>
        </member>
        <member name="T:WePay.CreditCard.Structure.EmvReceipt">
            <summary>
            Structure containing receipt information for EMV transactions.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Structure.EmvReceipt.ApplicationLabel">
            <summary>
            The label of the EMV Application.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Structure.EmvReceipt.ApplicationIdentifier">
            <summary>
            The application identifier (AID).
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Structure.EmvReceipt.TerminalIdentification">
            <summary>
            The terminal's identification number.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Structure.EmvReceipt.TransactionType">
            <summary>
            The type of financial transaction.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Structure.EmvReceipt.TransactionCertificate">
            <summary>
            Cryptogram returned by the card when it approves a transaction.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Structure.EmvReceipt.AuthorizationCode">
            <summary>
            The transaction authorization code.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Structure.EmvReceipt.MerchantId">
            <summary>
            The merchant ID (mid) used for the transaction.
            </summary>
        </member>
        <member name="P:WePay.CreditCard.Structure.EmvReceipt.MerchantName">
            <summary>
            The merchant's name.
            </summary>
        </member>
        <member name="T:WePay.FileUpload.Common.FileStatuses">
            <summary>
            All possible File Statuses currently recognized by WePay
            </summary>
        </member>
        <member name="T:WePay.FileUpload.Common.FileStatuses.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.FileUpload.Common.FileStatuses.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.FileUpload.Common.FileTypes">
            <summary>
            All file/document types currently supported by WePay
            </summary>
        </member>
        <member name="T:WePay.FileUpload.Common.FileTypes.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.FileUpload.Common.FileTypes.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.FileUpload.Common.RejectReasons">
            <summary>
            All possible reasons that a document is rejected by WePay
            </summary>
        </member>
        <member name="T:WePay.FileUpload.Common.RejectReasons.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.FileUpload.Common.RejectReasons.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.FileUpload.FileUploadService">
            <summary>
            The FileUpload API is a single endpoint that allows your application to upload documents on behalf of
            a merchant account for asynchronous risk and fraud review when WePay is unable to verify the merchant’s identity automatically.
            While WePay makes every effort not to create friction for your users, if we cannot verify a user’s identity through any other means,
            we will require the user to provide us with documents that prove their identity.
            All partners must be prepared for the possibility that their users (merchants) must upload documents.
            WePay uses a risk-based approach in deciding when your users must upload documents.
            Documents may be requested after your users have started accepting transactions and/or settled funds to their bank accounts.
            Once your user submits documents, the KYC state state changes from 'RequireDocs' to 'InReview' and the account state state
            changes from 'ActionRequired' to 'Active' because there is no further action required of the user.
            Documents are reviewed manually by WePay within two business days.
            If WePay is unable to verify the user’s identity with the documents provided,
             the user will be required to upload additional documents.
             The KYC state will return to 'RequireDocs' and the account state will return to 'ActionRequired'. 
             WePay reserves the right to disable an account after multiple failed attempts at verifying users by examining their documents.
             When your merchant’s KYC state changes to require_docs, your merchant should be notified that they must upload documents to finish account setup.
             Your application will take the following steps to upload a document to WePay:
             Make a FileUpload call for each document that needs to be uploaded.
             Your application is returned a FileId for each uploaded document.
             Call KnowYourCustomer Modify using the file IDs to confirm that the documents originated from a valid application.
             Unconfirmed documents are not reviewed and are deleted after 30 minutes.
             TIP: Your application may upload documents anytime using FileUpload,
             but your application will not be able to call KnowYourCustomer Modify unless the merchant’s KYC state is 'RequireDocs'.
            </summary>
        </member>
        <member name="M:WePay.FileUpload.FileUploadService.UploadAsync(WePay.FileUpload.Request.UploadRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            TIP: The file size limit is 10 MB.
             If your application attempts to upload a file in excess of 10 MB, a HTTP error code 413 is returned (request entity too large).
            </summary>
            <param name="uploadRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="P:WePay.FileUpload.Request.UploadRequest.File">
            <summary>
            The document being uploaded on behalf of the merchant for WePay review.
            Possible file extensions: pdf, jpg, jpeg, png, or no extension.
            </summary>
        </member>
        <member name="P:WePay.FileUpload.Request.UploadRequest.Type">
            <summary>
            The type of file being uploaded.
            (Enumeration of these values can be found in WePay.FileUpload.Common.FileTypes)
            </summary>
        </member>
        <member name="P:WePay.FileUpload.Request.UploadRequest.AccountId">
            <summary>
            The associated merchant’s unique account ID.
            </summary>
        </member>
        <member name="P:WePay.FileUpload.Response.UploadResponse.FileId">
            <summary>
            The unique ID of the uploaded document.
            </summary>
        </member>
        <member name="T:WePay.KnowYourCustomer.Common.KnowYourCustomerStates">
            <summary>
            All possible Know Your Customer States currently supported by WePay
            </summary>
        </member>
        <member name="T:WePay.KnowYourCustomer.Common.KnowYourCustomerStates.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.KnowYourCustomer.Common.KnowYourCustomerStates.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.KnowYourCustomer.Common.LegalForms">
            <summary>
            All possible Legal Forms currently recognized by WePay
            </summary>
        </member>
        <member name="T:WePay.KnowYourCustomer.Common.LegalForms.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.KnowYourCustomer.Common.LegalForms.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="M:WePay.KnowYourCustomer.KnowYourCustomerService.LookupAsync(WePay.KnowYourCustomer.Request.LookupRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            This call provides information about the status of the account’s KYC information and any documents that may have been uploaded.
            PERMISSION REQUIRED
            </summary>
            <param name="lookupRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.KnowYourCustomer.KnowYourCustomerService.CreateAsync(WePay.KnowYourCustomer.Request.CreateRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to gather the KYC information necessary to complete the merchant onboarding process.
            The KnowYourCustomer Create call must be completed before withdrawals can be setup.
            Additionally, KnowYourCustomer Create may not be called after withdrawals have been made.
            Changes after any withdrawal has been made require intervention by WePay Customer Support and are generally discouraged.
            After KYC information is submitted, it may not be modified through an API.
            Any necessary changes must be made through WePay Customer Support.
            The account for which KYC information is being submitted must be active (the access token for the account must have been confirmed).
            The call must be error free.
            Any error returned will result in the failure of the entire call.
            TIP: Merchant Category Codes (MCC) for the UK (used in the Business, Individual, and Organization Structures) must
            a valid UK MCC as defined in the MCC Codes document (https://www.wepay.com/developer/reference/mcc).
            PERMISSION REQUIRED
            </summary>
            <param name="createRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.KnowYourCustomer.KnowYourCustomerService.AuthorizeAsync(WePay.KnowYourCustomer.Request.AuthorizeRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            After KYC information has been entered via the KnowYourCustomer Create call,
            the data must be verified as originating from a valid application by means of a server-to-server call. 
            PERMISSION REQUIRED
            </summary>
            <param name="authorizeRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.KnowYourCustomer.KnowYourCustomerService.ModifyAsync(WePay.KnowYourCustomer.Request.ModifyRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            This call allows your application to amend an account’s KYC submission with additional data, such as supporting documentation.
            PERMISSION REQUIRED
            </summary>
            <param name="modifyRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="P:WePay.KnowYourCustomer.Request.AuthorizeRequest.KycId">
            <summary>
            A unique KYC ID returned by the /account/kyc/create call.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Request.CreateRequest.ClientId">
            <summary>
            A unique ID for the application.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Request.CreateRequest.AccountId">
            <summary>
            The unique ID of the account for which KYC information is being submitted.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Request.CreateRequest.Individual">
            <summary>
            Required if neither Business or Organization are not specified.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Request.CreateRequest.Business">
            <summary>
            Required if neither Individual or Organization are not specified.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Request.CreateRequest.Organization">
            <summary>
            Required if neither Individual or Business are not specified.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Request.LookupRequest.AccountId">
            <summary>
            The unique ID of the account for which you are seeking KYC information.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Request.ModifyRequest.AccountId">
            <summary>
            The unique ID of the account you want to modify.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Request.ModifyRequest.FileIds">
            <summary>
            The array of file IDs to be reviewed by WePay.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Response.CreateResponse.KycId">
            <summary>
            A unique ID for the newly created KYC object.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Response.LookupResponse.AccountId">
            <summary>
            The unique ID of the account.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Response.LookupResponse.State">
            <summary>
            The state of KYC for the account.
            (Enumeration of these values can be found in WePay.KnowYourCustomer.Common.KnowYourCustomerStates)
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Response.LookupResponse.DocumentResponse">
            <summary>
            Array of document structures that contains information about each individual document submitted by the user for verification.
            Note that not all accounts require documentation to complete KYC.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Response.LookupResponse.LegalName">
            <summary>
            The legal name of the account owner.
            </summary>
        </member>
        <member name="T:WePay.KnowYourCustomer.Structure.AccountOwner">
            <summary>
            Contains details about the owner of an account.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.AccountOwner.Name">
            <summary>
            The user's full name.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.AccountOwner.Email">
            <summary>
            The user's email address.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.AccountOwner.DateOfBirth">
            <summary>
            The user's date of birth.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.AccountOwner.Address">
            <summary>
            The user's full address
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.AccountOwner.Phone">
            <summary>
            The user's phone number.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.AccountOwner.CaOwnerCompliance">
            <summary>
            Canada specific owner fields.
            Required for Canadian entities only.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.AccountOwner.GbOwnerCompliance">
            <summary>
            UK specific owner information.
            Required for UK entities only.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.AccountOwner.UsOwnerCompliance">
            <summary>
            U.S. specific owner information.
            Required for US entities only.
            </summary>
        </member>
        <member name="T:WePay.KnowYourCustomer.Structure.BeneficialOwner">
            <summary>
            Contains basis identity and location information about a beneficial owner.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.BeneficialOwner.Name">
            <summary>
            The name of the beneficial owner.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.BeneficialOwner.Address">
            <summary>
            The address of the beneficial owner.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.BeneficialOwner.DateOfBirth">
            <summary>
            The birthdate of the beneficial owner.
            </summary>
        </member>
        <member name="T:WePay.KnowYourCustomer.Structure.BusinessOrOrganization">
            <summary>
            Contains information about the business owner, the name, address, and website of the business OR
            This structure describes an organization and its compliance information.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.BusinessOrOrganization.AccountOwner">
            <summary>
            Information about the account owner.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.BusinessOrOrganization.LegalEntityName">
            <summary>
            The name of the business.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.BusinessOrOrganization.PrimaryUrl">
            <summary>
            The URL of the business website.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.BusinessOrOrganization.EntityDescription">
            <summary>
            A description of the business.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.BusinessOrOrganization.Address">
            <summary>
            The full business address.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.BusinessOrOrganization.Mcc">
            <summary>
            The Merchant Category Code (MCC) that specifies the industry associated with the business.
            See the MCC Page (https://www.wepay.com/developer/reference/mcc) for more information.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.BusinessOrOrganization.CaEntityCompliance">
            <summary>
            Canada specific fields. Required for Canadian entities only.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.BusinessOrOrganization.GbEntityCompliance">
            <summary>
            UK specific fields. Required for UK entities only.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.BusinessOrOrganization.UsEntityCompliance">
            <summary>
            US specific fields. Required for US entities only.
            </summary>
        </member>
        <member name="T:WePay.KnowYourCustomer.Structure.CaEntityCompliance">
            <summary>
            This structure is used for Canadian entities only.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.CaEntityCompliance.GstHst">
            <summary>
            The GST/HST number used to validate a legal business or nonprofit organization in Canada.
            This field is required for businesses and nonprofit organizations.
            This field is optional for individuals.
            </summary>
        </member>
        <member name="T:WePay.KnowYourCustomer.Structure.CaOwnerCompliance">
            <summary>
            Contains information used to identify a user in Canada.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.CaOwnerCompliance.SocialInsuranceNumber">
            <summary>
            The Social Insurance Number (SIN) number used to identify an individual in Canada.
            The SIN number must be of the form nnn-nnn-nnn and consist only of digits 0 through 9.
            </summary>
        </member>
        <member name="T:WePay.KnowYourCustomer.Structure.Date">
            <summary>
            Contains standard formatted date information about an individual’s date of birth.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.Date.Year">
            <summary>
            The year of the user's birth.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.Date.Month">
            <summary>
            The month (values 1 through 12) of the user's birth.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.Date.Day">
            <summary>
            The day of the month (values 1 through 31) of the user's birth.
            </summary>
        </member>
        <member name="T:WePay.KnowYourCustomer.Structure.DocumentResponse">
            <summary>
            The Document Response structure show file metadata for documents that have been uploaded to WePay.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.DocumentResponse.FileId">
            <summary>
            Unique FileId from the FileUpload Upload
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.DocumentResponse.Type">
            <summary>
            The document type, as specified when uploaded.
            (Enumeration of these values can be found in WePay.FileUpload.Common.FileTypes)
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.DocumentResponse.State">
            <summary>
            The document's WePay review state. 
            (Enumeration of these values can be found in WePay.FileUpload.Common.FileStatuses)
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.DocumentResponse.RejectReason">
            <summary>
            The reason why the document was rejected during review (if applicable).
            This is guaranteed to be non-null if the document's state is 'Rejected', otherwise, it will be null.
            (Enumeration of these values can be found in WePay.FileUpload.Common.RejectReasons)
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.DocumentResponse.CreateTime">
            <summary>
            The Unix timestamp (UTC) (in seconds) when the document was uploaded to WePay.
            </summary>
        </member>
        <member name="T:WePay.KnowYourCustomer.Structure.GbEntityCompliance">
            <summary>
            This structure is used only for entities in Great Britain.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.GbEntityCompliance.CompanyNumber">
            <summary>
            The company number used to validate a legal business in the UK.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.GbEntityCompliance.LegalForm">
            <summary>
            The type of business.
            (Enumeration of these values can be found in WePay.KnowYourCustomer.Common.LegalForms)
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.GbEntityCompliance.BeneficialOwners">
            <summary>
            Owners the holds more than 25 percent of the company.
            </summary>
        </member>
        <member name="T:WePay.KnowYourCustomer.Structure.GbOwnerCompliance">
            <summary>
            Contains information about whether the owner is also a beneficial owner.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.GbOwnerCompliance.IsBeneficialOwner">
            <summary>
            Value of true indicates the user is also a beneficial owner of the account.
            </summary>
        </member>
        <member name="T:WePay.KnowYourCustomer.Structure.Individual">
            <summary>
            The KYC Individual Structure contains information about an account owner who is an individual (as opposed to a business or an organization).
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.Individual.AccountOwner">
            <summary>
            /The individual owner.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.Individual.Mcc">
            <summary>
            The Merchant Category Code (MCC) that specifies the industry associated with the business.
            See the MCC Page (https://www.wepay.com/developer/reference/mcc) for more information.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.Individual.PrimaryUrl">
            <summary>
            The URL of the individual's website.
            </summary>
        </member>
        <member name="T:WePay.KnowYourCustomer.Structure.KycAddress">
            <summary>
            Contains the user’s address information, including region and postcode.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.KycAddress.Address1">
            <summary>
            The street address where the user resides.
            In the US, this parameter must begin with a digit and not contain PO.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.KycAddress.Address2">
            <summary>
            A continuation of the users address.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.KycAddress.City">
            <summary>
            The city where the user resides.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.KycAddress.Region">
            <summary>
            The region where the user resides.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.KycAddress.PostalCode">
            <summary>
            The postcode where the user resides.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.KycAddress.Country">
            <summary>
            The country where the user resides.
            </summary>
        </member>
        <member name="T:WePay.KnowYourCustomer.Structure.Name">
            <summary>
            Contains the full name of the user.
            CAUTION:  WePay concatenates the first and middle names and then truncates the string to the first 35 characters.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.Name.First">
            <summary>
            The user's first name.
            Truncated after the first 35 characters.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.Name.Middle">
            <summary>
            The user's middle name.
            Truncated after the first 35 characters.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.Name.Last">
            <summary>
            The user's last name.
            Truncated after the first 35 characters.
            </summary>
        </member>
        <member name="T:WePay.KnowYourCustomer.Structure.Phone">
            <summary>
            Contains the user’s or entity’s registered phone number.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.Phone.CountryCode">
            <summary>
            The country code of the primary phone number entered by the user.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.Phone.PhoneNumber">
            <summary>
            The primary phone number entered by the user.
            </summary>
        </member>
        <member name="T:WePay.KnowYourCustomer.Structure.UsEntityCompliance">
            <summary>
            This structure is used for U.S. entities only.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.UsEntityCompliance.Ein">
            <summary>
            The EIN used to validate a legal business or nonprofit organization in the US.
            This field is required for businesses and nonprofit organizations.
            This field is optional for individuals.
            </summary>
        </member>
        <member name="T:WePay.KnowYourCustomer.Structure.UsOwnerCompliance">
            <summary>
            Contains information identifying a US Owner as a valid person.
            TIP: SocialSecurityNumberLast4 is accepted for all US merchants upon the first submission of KYC.
            The full 9 SocialSecurityNumber must be submitted for US merchants of type individual that do not pass synchronous KYC validation upon the first submission.
            </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.UsOwnerCompliance.SocialSecurityNumber">
            <summary>
            The user's government issued Social Security Number (SSN), used for identification.
            The SSN must be in form nnn-nn-nnnn where only digits between 0 and 9 are valid.
            /// </summary>
        </member>
        <member name="P:WePay.KnowYourCustomer.Structure.UsOwnerCompliance.SocialSecurityNumberLast4">
            <summary>
            The last four digits of the user's goverment issued Social Security Number (SSN).
            The number must be exactly 4 digits(values 0 through 9) in length.
            </summary>
        </member>
        <member name="T:WePay.OAuth2.OAuth2Service">
            <summary>
            Create users using the OAuth2 API calls.
            </summary>
        </member>
        <member name="M:WePay.OAuth2.OAuth2Service.AuthorizeAsync(WePay.OAuth2.Request.AuthorizeRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            This call is a URI which your application sends to the user so that they can grant your application permission to make API calls on their behalf.
            </summary>
            <param name="authorizeRequest"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.OAuth2.OAuth2Service.TokenAsync(WePay.OAuth2.Request.TokenRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Once you have sent the user through the authorization endpoint and they have returned with a code,
            you can use that code to retrieve an access token for that user.
            The redirect URI will need to be the same as in the in OAuth2 Token step.
            Note that when you request a new access token with this call,
            WePay automatically revokes all previously issued access tokens for this user.
            Make sure you update the access token you are using for a user each time you make this call.
            </summary>
            <param name="tokenRequest"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="P:WePay.OAuth2.Request.AuthorizeRequest.ClientId">
            <summary>
            The client id issued to the app, found on your application's dashboard.
            </summary>
        </member>
        <member name="P:WePay.OAuth2.Request.AuthorizeRequest.RedirectUri">
            <summary>
            The URI the user will be redirected to after authorization. Must have the same domain as the application.
            </summary>
        </member>
        <member name="P:WePay.OAuth2.Request.AuthorizeRequest.Scope">
            <summary>
            Custom user permission settings are no longer supported. Please provide a comma-separated list.
            (Enumeration of these values can be found in WePay.User.Common.Scopes)
            </summary>
        </member>
        <member name="P:WePay.OAuth2.Request.AuthorizeRequest.State">
            <summary>
            The opaque value the client application uses to maintain state.
            </summary>
        </member>
        <member name="P:WePay.OAuth2.Request.AuthorizeRequest.UserName">
            <summary>
            The user name used to pre-fill the authorization form.
            </summary>
        </member>
        <member name="P:WePay.OAuth2.Request.AuthorizeRequest.UserEmail">
            <summary>
            The user email used to pre-fill the authorization form.
            </summary>
        </member>
        <member name="P:WePay.OAuth2.Request.AuthorizeRequest.UserCountry">
            <summary>
            The user's country of origin 2-letter ISO code
            (Enumeration of these values can be found in WePay.Shared.Common.Countries)
            Default: US
            </summary>
        </member>
        <member name="P:WePay.OAuth2.Request.TokenRequest.ClientId">
            <summary>
            The client id issued to the app, found on your application's dashboard.
            </summary>
        </member>
        <member name="P:WePay.OAuth2.Request.TokenRequest.RedirectUri">
            <summary>
            The URI the user will be redirected to after authorization. Must have the same domain as the application.
            </summary>
        </member>
        <member name="P:WePay.OAuth2.Request.TokenRequest.ClientSecret">
            <summary>
            The client secret issued to the app by WePay, found on your application's dashboard
            </summary>
        </member>
        <member name="P:WePay.OAuth2.Request.TokenRequest.Code">
            <summary>
            The code returned by OAuth2 Authorize.
            This code expires in 10 minutes.
            </summary>
        </member>
        <member name="P:WePay.OAuth2.Request.TokenRequest.CallbackUri">
            <summary>
            A callback_uri you want to receive IPNs for this user on.
            If you specify a callback URI you will receive IPNs with the UserId when the user revokes an AccessToken or is deleted.
            </summary>
        </member>
        <member name="P:WePay.OAuth2.Response.AuthorizeResponse.Code">
            <summary>
            The authorization code used to get the access token. This code expires in 10 minutes.
            </summary>
        </member>
        <member name="P:WePay.OAuth2.Response.AuthorizeResponse.State">
            <summary>
            The opaque value the client application uses to maintain state (same as above, if provided).
            </summary>
        </member>
        <member name="P:WePay.OAuth2.Response.TokenResponse.UserId">
            <summary>
            The unique user ID of the user.
            </summary>
        </member>
        <member name="P:WePay.OAuth2.Response.TokenResponse.AccessToken">
            <summary>
            The AccessToken that you can use to make calls on behalf of the user.
            </summary>
        </member>
        <member name="P:WePay.OAuth2.Response.TokenResponse.TokenType">
            <summary>
            The token type.
            Currently only BEARER is supported.
            </summary>
        </member>
        <member name="P:WePay.OAuth2.Response.TokenResponse.ExpiresIn">
            <summary>
            How much time in seconds till the AccessToken expires.
            If null or not present, the access token will be valid until the user revokes it.
            </summary>
        </member>
        <member name="T:WePay.Order.Common.OrderStatuses">
            <summary>
            All possible Order Statuses currently recognized by WePay
            </summary>
        </member>
        <member name="T:WePay.Order.Common.OrderStatuses.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Order.Common.OrderStatuses.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Order.Common.OrderTypes">
            <summary>
            All possible Order Types currently recognized by WePay
            </summary>
        </member>
        <member name="T:WePay.Order.Common.OrderTypes.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Order.Common.OrderTypes.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Order.Common.TrackingInformationStatuses">
            <summary>
            All possible statuses for tracking information pertaining to a given order
            </summary>
        </member>
        <member name="T:WePay.Order.Common.TrackingInformationStatuses.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Order.Common.TrackingInformationStatuses.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Order.OrderService">
            <summary>
            The order resource is used as part of WePay’s mPOS program. An order is a request by a partner to have WePay ship a card reader to a merchant.
            PERMISSION REQUIRED: Please get in touch with your WePay account manager to use this API, or to learn more about WePay’s mPOS program.
            </summary>
        </member>
        <member name="M:WePay.Order.OrderService.LookupAsync(WePay.Order.Request.LookupRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to lookup the details of an mPOS card reader order on WePay.
            PERMISSION REQUIRED
            </summary>
            <param name="lookupRequest"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.Order.OrderService.CreateAsync(WePay.Order.Request.CreateRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Create a new order.
            PERMISSION REQUIRED
            </summary>
            <param name="createRequest"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.Order.OrderService.FindAsync(WePay.Order.Request.FindRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to search for all orders that match a certain OrderId.
            PERMISSION REQUIRED
            </summary>
            <param name="findRequest"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="P:WePay.Order.Request.CreateRequest.AccountId">
            <summary>
            The merchant account to be associated with this order.
            KYC must be complete before the reader can be ordered.
            </summary>
        </member>
        <member name="P:WePay.Order.Request.CreateRequest.Quantity">
            <summary>
            The quantity of card readers for this order.
            </summary>
        </member>
        <member name="P:WePay.Order.Request.CreateRequest.Type">
            <summary>
            The type of order.
            (Enumeration of these values can be found in WePay.Order.Common.OrderTypes)
            </summary>
        </member>
        <member name="P:WePay.Order.Request.CreateRequest.CardReader">
            <summary>
            Details of the order, for use when type equals CardReader
            </summary>
        </member>
        <member name="P:WePay.Order.Request.CreateRequest.ShippingMethod">
            <summary>
            The allowed values will be defined in discussion with WePay.
            </summary>
        </member>
        <member name="P:WePay.Order.Request.CreateRequest.ShippingContact">
            <summary>
            Shipping contact details
            </summary>
        </member>
        <member name="P:WePay.Order.Request.CreateRequest.ShippingAddress">
            <summary>
            Shipping ddress details
            </summary>
        </member>
        <member name="P:WePay.Order.Request.CreateRequest.CallbackUri">
            <summary>
            The URL that we will POST IPN data to.
            </summary>
        </member>
        <member name="P:WePay.Order.Request.FindRequest.OrderId">
            <summary>
            The unique ID of the order you want to look up.
            </summary>
        </member>
        <member name="P:WePay.Order.Request.FindRequest.Start">
            <summary>
            Starting point for looking up existing orders.
            Default: 0
            </summary>
        </member>
        <member name="P:WePay.Order.Request.FindRequest.Limit">
            <summary>
            Ending point for looking up existing orders.
            Default: 50
            </summary>
        </member>
        <member name="P:WePay.Order.Request.LookupRequest.OrderId">
            <summary>
            The unique ID of the order you want to look up.
            </summary>
        </member>
        <member name="P:WePay.Order.Response.LookupResponse.OrderId">
            <summary>
            The unique ID of the order.
            </summary>
        </member>
        <member name="P:WePay.Order.Response.LookupResponse.AccountId">
            <summary>
            The merchant account associated with this order.
            KYC must be complete before the reader can be ordered.
            </summary>
        </member>
        <member name="P:WePay.Order.Response.LookupResponse.Quantity">
            <summary>
            The number of card readers that were ordered.
            </summary>
        </member>
        <member name="P:WePay.Order.Response.LookupResponse.Status">
            <summary>
            The status of the order.
            (Enumeration of these values can be found in WePay.Order.Common.OrderStatuses)
            </summary>
        </member>
        <member name="P:WePay.Order.Response.LookupResponse.Type">
            <summary>
            The type of order.
            (Enumeration of these values can be found in WePay.Order.Common.OrderTypes)
            </summary>
        </member>
        <member name="P:WePay.Order.Response.LookupResponse.CardReader">
            <summary>
            Details of the order, for use when type equals CardReader
            </summary>
        </member>
        <member name="P:WePay.Order.Response.LookupResponse.ShippingMethod">
            <summary>
            The allowed values will be defined in discussion with WePay.
            </summary>
        </member>
        <member name="P:WePay.Order.Response.LookupResponse.ShippingContact">
            <summary>
            Shipping contact details
            </summary>
        </member>
        <member name="P:WePay.Order.Response.LookupResponse.ShippingAddress">
            <summary>
            Shipping address details
            </summary>
        </member>
        <member name="P:WePay.Order.Response.LookupResponse.TrackingInformation">
            <summary>
            Tracking information
            </summary>
        </member>
        <member name="T:WePay.Order.Structure.CardReader">
            <summary>
            The card reader structure contains details on orders for card readers placed using WePay’s mPOS fulfillment service.
            It is only relevant to platforms using WePay’s mPOS service.
            </summary>
        </member>
        <member name="P:WePay.Order.Structure.CardReader.Model">
            <summary>
            Model of card reader (valid options are defined as part of your integration with mPOS.)
            </summary>
        </member>
        <member name="T:WePay.Order.Structure.ShippingContact">
            <summary>
            The shipping contact structure contains information about the recipient of an mPOS card reader.
            It is only relevant to platforms using WePay’s mPOS service.
            </summary>
        </member>
        <member name="P:WePay.Order.Structure.ShippingContact.Name">
            <summary>
            The name of the contact for this order.
            </summary>
        </member>
        <member name="P:WePay.Order.Structure.ShippingContact.Company">
            <summary>
            The name of the company for this order (optional).
            </summary>
        </member>
        <member name="P:WePay.Order.Structure.ShippingContact.Phone">
            <summary>
            The phone number of the contact for this order.
            </summary>
        </member>
        <member name="P:WePay.Order.Structure.ShippingContact.Email">
            <summary>
            The email address of the contact for this order
            </summary>
        </member>
        <member name="T:WePay.Order.Structure.TrackingInformation">
            <summary>
            The tracking information structure contains details on mPOS card reader shipments.
            It is only relevant to partners using WePay’s mPOS fulfillment service.
            </summary>
        </member>
        <member name="P:WePay.Order.Structure.TrackingInformation.TrackingService">
            <summary>
            The name of the service used for deliveries.
            </summary>
        </member>
        <member name="P:WePay.Order.Structure.TrackingInformation.TrackingCode">
            <summary>
            The tracking code provided by the delivery service.
            </summary>
        </member>
        <member name="P:WePay.Order.Structure.TrackingInformation.Status">
            <summary>
            The status of the package.
            (Enumeration of these values can be found in WePay.Order.Common.TrackingInformationStatuses)
            </summary>
        </member>
        <member name="T:WePay.PaymentBank.Common.PaymentBankStates">
            <summary>
            All possible Payment Bank States currently recognized by WePay
            </summary>
        </member>
        <member name="T:WePay.PaymentBank.Common.PaymentBankStates.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.PaymentBank.Common.PaymentBankStates.New">
            <summary>
            The payment bank was just created by the application.
            </summary>
        </member>
        <member name="F:WePay.PaymentBank.Common.PaymentBankStates.Pending">
            <summary>
            The payment bank is being authorized for use with a checkout.
            If a user goes through the manual account entry flow during tokenization, we send deposits to their account and ask them to confirm them.
            </summary>
        </member>
        <member name="F:WePay.PaymentBank.Common.PaymentBankStates.Authorized">
            <summary>
            The payment bank is authorized for use with a checkout.
            </summary>
        </member>
        <member name="F:WePay.PaymentBank.Common.PaymentBankStates.Disabled">
            <summary>
            The payment bank has been disabled.
            </summary>
        </member>
        <member name="F:WePay.PaymentBank.Common.PaymentBankStates.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.PaymentBank.PaymentBankService">
            <summary>
            The payment_bank object represents a bank account that is tokenized from the tokenization.3.latest.js library and is used for payments.
            </summary>
        </member>
        <member name="M:WePay.PaymentBank.PaymentBankService.LookupAsync(WePay.PaymentBank.Request.LookupRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to look up the details of a payment bank.
            </summary>
            <param name="lookupRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.PaymentBank.PaymentBankService.PersistAsync(WePay.PaymentBank.Request.LookupRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call when you want to save a bank account on your platform for later use as a payment method, without calling Checkout Create now.
            If the payer has already verified the bank account, it will be available immediately for use as a payment method.
            If the payer has not verified the bank account, this call will initiate the sending of micro-deposits.
            </summary>
            <param name="lookupRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="P:WePay.PaymentBank.Request.LookupRequest.PaymentBankId">
            <summary>
            The unique ID for the payment bank you want to look up.
            </summary>
        </member>
        <member name="P:WePay.PaymentBank.Request.LookupRequest.ClientId">
            <summary>
            The ID for your API application.
            You can find it on your application's dashboard.
            </summary>
        </member>
        <member name="P:WePay.PaymentBank.Request.LookupRequest.ClientSecret">
            <summary>
            The secret for your API application.
            You can find it on your application's dashboard.
            </summary>
        </member>
        <member name="P:WePay.PaymentBank.Response.LookupResponse.PaymentBankId">
            <summary>
            The unique ID for the payment bank.
            </summary>
        </member>
        <member name="P:WePay.PaymentBank.Response.LookupResponse.BankName">
            <summary>
            The name of the payment bank account.
            </summary>
        </member>
        <member name="P:WePay.PaymentBank.Response.LookupResponse.AccountLastFour">
            <summary>
            The last four digits of the payment bank account.
            </summary>
        </member>
        <member name="P:WePay.PaymentBank.Response.LookupResponse.State">
            <summary>
            The state that the payment bank is in.
            </summary>
        </member>
        <member name="T:WePay.PaymentBank.Structure.PaymentBank">
            <summary>
            The payment bank structure object contains the unique ID for a payment bank.
            </summary>
        </member>
        <member name="P:WePay.PaymentBank.Structure.PaymentBank.Id">
            <summary>
            The payment bank ID.
            </summary>
        </member>
        <member name="T:WePay.Report.Common.ObjectTypes">
            <summary>
            All possible object types
            </summary>
        </member>
        <member name="T:WePay.Report.Common.ObjectTypes.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Report.Common.ObjectTypes.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Report.Common.ReportStates">
            <summary>
            All possible report states
            </summary>
        </member>
        <member name="T:WePay.Report.Common.ReportStates.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Report.Common.ReportStates.New">
            <summary>
            Indicates that the Report Create call was successfully executed.
            </summary>
        </member>
        <member name="F:WePay.Report.Common.ReportStates.Processing">
            <summary>
            The report is being prepared.
            </summary>
        </member>
        <member name="F:WePay.Report.Common.ReportStates.Complete">
            <summary>
            The report has been successfully prepared and is ready to be retrieved.
            </summary>
        </member>
        <member name="F:WePay.Report.Common.ReportStates.Deleted">
            <summary>
            The report has been deleted and no data from the report can be recovered.
            Reports are automatically deleted after four days.
            However, you can still retrieve the metadata for the report using the Report Lookup call and passing the ReportId.
            </summary>
        </member>
        <member name="F:WePay.Report.Common.ReportStates.Failed">
            <summary>
            The report did not process and no data can be recovered.
            You can still retrieve the metadata for the report using the Report Lookup call and passing the ReportId.
            </summary>
        </member>
        <member name="F:WePay.Report.Common.ReportStates.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Report.Common.ReportTypes">
            <summary>
            All possible report types
            </summary>
        </member>
        <member name="T:WePay.Report.Common.ReportTypes.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Report.Common.ReportTypes.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Report.ReportService">
            <summary>
            Use the the Reports API to request bulk reports for merchants.
            Reports are requested and received following these steps:
            Your platform requests a report via Report Create.
            WePay sends an IPN when the report is available - typically within 5 to 10 minutes.
            Your platform uses Report Lookup to obtain the link to download the report.
            Your platform can deliver the report(or just the report link) to the merchant in a variety of ways(see the “Receiving Reports” section below).
            Use Report Create to request a report. The request includes:
            The type of report, The callback URI at which your platform will get an IPN when the report is ready.
            ADVANCED OPTIONS: the same options in the wepay.com merchant reports user interface, as appropriate to each type of report(date ranges, for example).
            Reports are processed asynchronously, which typically takes 5 to 10 minutes.
            Your application will receive a callback when the report is ready.
            Lookup will initially show state 'New', which means the request has been received but has not started being processed.
            Once processing begins, Report Lookup will show state 'Processing'.
            Your application should monitor IPNs and wait for the report to be in state 'Complete'.
            When your application receives the IPN, it should call Report Lookup.
            Verify that the state is now 'Complete', and then use the report URI to access the data.
            The URI will point to a comma-separated values (CSV) file.
            Rows are terminated with newlines.
            If ReportUriParameter value is null, then the report is still processing.
            This should also be reflected in the state parameter.
            Reports are available for four days from the time they are generated.
            WePay sends an IPN when the report is deleted.
            There is delay between the time the data is created or modified and the time it is available for download in a report.
            For reconciliation reports, the delay is 6 hours.
            For transaction reports, the delay is 36 hours.
            Note that this is independent of the 5 to 10 minutes it takes to process a request.
            Report generation will automatically fail if the report is requested inside the data latency period.
            </summary>
        </member>
        <member name="M:WePay.Report.ReportService.LookupAsync(WePay.Report.Request.LookupRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to obtain information about a requested report and to obtain the URL from which your report can be downloaded.
            </summary>
            <param name="lookupRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.Report.ReportService.CreateAsync(WePay.Report.Request.CreateRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to request a report. 
            </summary>
            <param name="createRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="P:WePay.Report.Request.CreateRequest.Type">
            <summary>
            The type of report.
            (Enumeration of these values can be found in WePay.Report.Common.ReportTypes)
            </summary>
        </member>
        <member name="P:WePay.Report.Request.CreateRequest.Resource">
            <summary>
            Identifies the object on which the report is based.
            </summary>
        </member>
        <member name="P:WePay.Report.Request.CreateRequest.AdvancedOptions">
            <summary>
            Advanced options for this report.
            </summary>
        </member>
        <member name="P:WePay.Report.Request.CreateRequest.CallbackUri">
            <summary>
            Where to send IPNs for this report.
            </summary>
        </member>
        <member name="P:WePay.Report.Request.LookupRequest.ReportId">
            <summary>
            The unique ID of the report for which you want information.
            </summary>
        </member>
        <member name="P:WePay.Report.Response.LookupResponse.ReportId">
            <summary>
            The unique ID of the report.
            </summary>
        </member>
        <member name="P:WePay.Report.Response.LookupResponse.UserId">
            <summary>
            The ID of the WePay user for whom the report was requested.
            </summary>
        </member>
        <member name="P:WePay.Report.Response.LookupResponse.Type">
            <summary>
            The type of merchant report.
            (Enumeration of these values can be found in WePay.Report.Common.ReportTypes)
            </summary>
        </member>
        <member name="P:WePay.Report.Response.LookupResponse.Resource">
            <summary>
            Describes the object on which this report is based.
            </summary>
        </member>
        <member name="P:WePay.Report.Response.LookupResponse.AdvancedOptions">
            <summary>
            Advanced options for this report.
            </summary>
        </member>
        <member name="P:WePay.Report.Response.LookupResponse.State">
            <summary>
            The state of the report.
            (Enumeration of these values can be found in WePay.Report.Common.ReportStates)
            </summary>
        </member>
        <member name="P:WePay.Report.Response.LookupResponse.RequestTime">
            <summary>
            The Unix timestamp (UTC) when the report was requested
            </summary>
        </member>
        <member name="P:WePay.Report.Response.LookupResponse.ExpiresTime">
            <summary>
            The Unix time when the report will expire (UTC).
            </summary>
        </member>
        <member name="P:WePay.Report.Response.LookupResponse.CallbackUri">
            <summary>
            Where to send IPNs for this report.
            </summary>
        </member>
        <member name="P:WePay.Report.Response.LookupResponse.ReportUri">
            <summary>
            The URL from which the report may be downloaded.
            The value is null until the report generation is complete.
            </summary>
        </member>
        <member name="T:WePay.Report.Structure.AdvancedOptions">
            <summary>
            Contains the Unix timestamps (UTC) for the date range of the report.
            </summary>
        </member>
        <member name="P:WePay.Report.Structure.AdvancedOptions.StartTime">
            <summary>
            The start of the time range (UTC Unix timestamp) selected for the report data.
            </summary>
        </member>
        <member name="P:WePay.Report.Structure.AdvancedOptions.EndTime">
            <summary>
            The end of the time range (UTC Unix timestamp) selected for the report data.
            </summary>
        </member>
        <member name="P:WePay.Report.Structure.AdvancedOptions.DisableEmail">
            <summary>
            Flag to control whether or not an email is sent out when the generation of the report is complete
            Default: true
            Note: This field is only returned in the Report Lookup Response.
            It is not a parameter that you can currently set in Report Create
            </summary>
        </member>
        <member name="T:WePay.Report.Structure.ReportResource">
            <summary>
            Contains information about the resources about which the report is based.
            </summary>
        </member>
        <member name="P:WePay.Report.Structure.ReportResource.ObjectType">
            <summary>
            The type of resource upon which the report is based.
            (Enumeration of these values can be found in WePay.Report.Common.ObjectTypes)
            Note: Use Account for MerchantTransactions reports and Withdrawal for Reconciliation reports.
            </summary>
        </member>
        <member name="P:WePay.Report.Structure.ReportResource.ObjectId">
            <summary>
            The unique ID of the resource upon which this report is based.
            The resources referred to by this ID are the AccountId or the WithdrawalId for the object specified in ObjectType above.
            </summary>
        </member>
        <member name="T:WePay.Risk.Common.AddressTypes">
            <summary>
            All Address Types currently supported by WePay
            </summary>
        </member>
        <member name="T:WePay.Risk.Common.AddressTypes.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.AddressTypes.Incorporation">
            <summary>
            Address associated with business' incorporation
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.AddressTypes.Headquarters">
            <summary>
            Main office
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.AddressTypes.Satellite">
            <summary>
            A non-headquarters office
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.AddressTypes.MailForwarding">
            <summary>
            Address used to receive mail
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.AddressTypes.Home">
            <summary>
            A person's home address
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.AddressTypes.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Risk.Common.AssociatedObjectTypes">
            <summary>
            All possible WePay types for which an Rbit can be associated with
            </summary>
        </member>
        <member name="T:WePay.Risk.Common.AssociatedObjectTypes.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.AssociatedObjectTypes.Account">
            <summary>
            For information about a payee.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.AssociatedObjectTypes.User">
            <summary>
            For information about a payer with a WePay user id.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.AssociatedObjectTypes.Checkout">
            <summary>
            For information about a checkout transaction or checkout payer.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.AssociatedObjectTypes.Preapproval">
            <summary>
            For information about a preapproval transaction or preapproval payer.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.AssociatedObjectTypes.CreditCard">
            <summary>
            For information about the owner of a credit card.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.AssociatedObjectTypes.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Risk.Common.AutoBillingCreators">
            <summary>
            All possible Creators for an AutoBilling Rbit
            </summary>
        </member>
        <member name="T:WePay.Risk.Common.AutoBillingCreators.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.AutoBillingCreators.Payer">
            <summary>
            The payer set up and authorized auto-billing
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.AutoBillingCreators.Merchant">
            <summary>
            The merchant set-up auto-billing on the payer's behalf
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.AutoBillingCreators.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Risk.Common.BusinessNameTypes">
            <summary>
            All possible Business Name Types currently supported by WePay
            </summary>
        </member>
        <member name="T:WePay.Risk.Common.BusinessNameTypes.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.BusinessNameTypes.Legal">
            <summary>
             This is legal name of the company
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.BusinessNameTypes.Dba">
            <summary>
            This is the Also Known As or Doing Business As name of the company
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.BusinessNameTypes.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Risk.Common.ExternalAccountTypes">
            <summary>
            All possible external account types currently supported by WePay
            </summary>
        </member>
        <member name="T:WePay.Risk.Common.ExternalAccountTypes.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.ExternalAccountTypes.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Risk.Common.IndustryCodeTypes">
            <summary>
            All possible Industry Code Types currently supported by WePay
            </summary>
        </member>
        <member name="T:WePay.Risk.Common.IndustryCodeTypes.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.IndustryCodeTypes.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Risk.Common.IsPartnerAccountOptions">
            <summary>
            All possible optionns for IsPartnerAccount field on ExternalAccountProperties (yes WePay made this a string not boolean value)
            </summary>
        </member>
        <member name="T:WePay.Risk.Common.IsPartnerAccountOptions.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.IsPartnerAccountOptions.Yes">
            <summary>
            This is an account controlled by you, the WePay partner.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.IsPartnerAccountOptions.No">
            <summary>
            This is not an account controlled by you, the WePay partner.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.IsPartnerAccountOptions.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Risk.Common.NormalizedAddressStatuses">
            <summary>
            All possible Normalized Address Statuses currently supported by WePay
            </summary>
        </member>
        <member name="T:WePay.Risk.Common.NormalizedAddressStatuses.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.NormalizedAddressStatuses.UserConfirmed">
            <summary>
            User reviewed and confirmed normalized address as correct
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.NormalizedAddressStatuses.UserDenied">
            <summary>
            User reviewed and indicated normalized address is not correct
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.NormalizedAddressStatuses.UserDidNotReview">
            <summary>
            User was not shown the normalized address and asked to confirm or deny
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.NormalizedAddressStatuses.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Risk.Common.PaymentFrequencies.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.PaymentFrequencies.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Risk.Common.PersonRoles">
            <summary>
            All possible roles for which a person can have in the Person Rbit
            </summary>
        </member>
        <member name="T:WePay.Risk.Common.PersonRoles.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.PersonRoles.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Risk.Common.PhoneTypes">
            <summary>
            All possible Phone Types currently supported by WePay
            </summary>
        </member>
        <member name="T:WePay.Risk.Common.PhoneTypes.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.PhoneTypes.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Risk.Common.RbitTypes">
            <summary>
            All possible currently supported Rbit types
            </summary>
        </member>
        <member name="T:WePay.Risk.Common.RbitTypes.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.RbitTypes.Address">
            <summary>
            A mailing address associated with a user or account.
            Rbits of type address should be sent either as a related rbit of type = person or as a top level rbit for an account.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.RbitTypes.AutoBilling">
            <summary>
            If the transaction is set-up for auto-billing (where the users card is charged automatically every month), include this rbit to provide details of the auto-billing.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.RbitTypes.BusinessDescription">
            <summary>
            Rbts of type “business_description” should be sent as a top-level rbit for an account.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.RbitTypes.BusinessName">
            <summary>
            The business name associated with an account.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.RbitTypes.Email">
            <summary>
            The email address associated with an entity.
            TIP: Usually passed in as a RelatedRbits of type = person.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.RbitTypes.ExternalAccount">
            <summary>
            The user’s external accounts, such as Facebook or Twitter.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.RbitTypes.FundraisingEvent">
            <summary>
            Information about an event that is the context for a donation transaction or donation account. It can therefore be passed as an rbit associated with a checkout or an account.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.RbitTypes.IndustryCode">
            <summary>
            A code from one of several sources that indicates the industry associated with the business.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.RbitTypes.PartnerService">
            <summary>
            This type describes one type of service or product the user has signed up for on the partner site.
            This should be passed as a related rbit of the External Account rbit that contains partner site information.
            If the user is signed up for multiple services, you can pass multiple related rbits.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.RbitTypes.Person">
            <summary>
            Information about a person associated with a user or account.
            It could be a person who does not have formal access to the User or Account
            (e.g., an employee of a company who provided information).
            Rbits of type Person are usually associated with the following related rbits: Phone and Address.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.RbitTypes.Phone">
            <summary>
            A phone number associated with a user or account.
            Rbits of type phone should be sent either as a related rbit of type = person or as a top level rbit for an account.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.RbitTypes.TransactionDetails">
            <summary>
            Information regarding a specific transaction.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.RbitTypes.WebsiteUri">
            <summary>
            Information regarding a website
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.RbitTypes.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Risk.Common.ServiceBillingMethods">
            <summary>
            All possible Service Period Billing Methods currently supported by WePay
            </summary>
        </member>
        <member name="T:WePay.Risk.Common.ServiceBillingMethods.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.ServiceBillingMethods.FreeFormEntry">
            <summary>
            User entered or edited line item directly on invoice.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.ServiceBillingMethods.TimedBillingAtStaffRate">
            <summary>
            Rate set per staff member and hours timed automatically.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.ServiceBillingMethods.TimedBillingAtTaskRate">
            <summary>
            Rate set per task and hours timed automatically.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.ServiceBillingMethods.TimedBillingAtProjectRate">
            <summary>
            Rate set per project and hours timed automatically.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.ServiceBillingMethods.HourlyBillingAtStaffRate">
            <summary>
            Rate set per staff member and hours entered manually.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.ServiceBillingMethods.HourlyBillingAtTaskRate">
            <summary>
            Rate set per task and hours entered manually.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.ServiceBillingMethods.HourlyBillingAtProjectRate">
            <summary>
            Rate set per project and hours entered manually.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.ServiceBillingMethods.FlatProjectAmount">
            <summary>
            Flat invoicing per project.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.ServiceBillingMethods.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Risk.Common.Sources">
            <summary>
            The source parameter (see Rbit Create API call) can be set to any one of values found here
            </summary>
        </member>
        <member name="T:WePay.Risk.Common.Sources.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.Sources.User">
            <summary>
            Data provided by the user through a webflow
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.Sources.Guidestar">
            <summary>
            www.guidestar.com
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.Sources.ExperianPreciseId">
            <summary>
            www.experian.com
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.Sources.ExperianBizId">
            <summary>
            www.experian.com
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.Sources.ExperianBizIq">
            <summary>
            www.experian.com
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.Sources.Equifax">
            <summary>
            www.equifax.com
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.Sources.Spokeo">
            <summary>
            www.spokeo.com
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.Sources.Whitepages">
            <summary>
            www.whitepages.com
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.Sources.IrsTinCheck">
            <summary>
            www.irs.gov
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.Sources.PartnerDatabase">
            <summary>
            Data gathered directly by partner (for example transaction revenue from partner account).
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.Sources.PartnerEmployee">
            <summary>
            Data gathered from a partner employee (for example, from a customer service or a sales call).
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.Sources.GenericWebsite">
            <summary>
            Data gathered from a website other than a major data provider.
            </summary>
        </member>
        <member name="F:WePay.Risk.Common.Sources.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="P:WePay.Risk.Request.CreateRequest.AssociatedObjectType">
            <summary>
            The type of object that this rbit is associated with. 
            (Enumeration of these values can be found in WePay.Risk.Common.AssociatedObjectTypes)
            </summary>
        </member>
        <member name="P:WePay.Risk.Request.CreateRequest.AssoicatedObjectId">
            <summary>
            The unique ID of the object that this rbit is associated with.
            </summary>
        </member>
        <member name="P:WePay.Risk.Request.CreateRequest.Type">
            <summary>
            The type of rbit.
            (Enumeration of these values can be found in WePay.Risk.Common.RbitTypes)
            </summary>
        </member>
        <member name="P:WePay.Risk.Request.CreateRequest.Properties">
            <summary>
            The properties of the rbit will depend on the type.
            </summary>
        </member>
        <member name="P:WePay.Risk.Request.CreateRequest.ReceiveTime">
            <summary>
            The Unix time when the data in this rbit was first obtained.
            </summary>
        </member>
        <member name="P:WePay.Risk.Request.CreateRequest.Source">
            <summary>
            Source of the information
            (Enumeration of these values can be found in WePay.Risk.Common.Sources)
            </summary>
        </member>
        <member name="P:WePay.Risk.Request.CreateRequest.Note">
            <summary>
            Free form note giving more details about the information. Used by Risk Analysts during manual review.
            </summary>
        </member>
        <member name="P:WePay.Risk.Request.CreateRequest.RelatedRbits">
            <summary>
            An array of Rbits that are related to this Rbit.
            For example, a person Rbit can have address (type = "Address") and social security number (type = "TaxId")
            Rbits associated with that person sent as related Rbits.
            If an Rbit is primarily associated with an associated object, then it should be passed as a top-level Rbit and
            not as a related Rbit.
            For example, a business phone number should be passed as a top-level for the account,
            whereas a home phone number for one employee should be passed as a related Rbit associated with the person Rbit.
            TIP: You do not need to specify the parameters, AssociatedObjectType and AssociatedObjectId for Rbits sent as related Rbits.
            </summary>
        </member>
        <member name="P:WePay.Risk.Request.DeleteRequest.RbitId">
            <summary>
            The unique ID of the rbit you want to delete.
            </summary>
        </member>
        <member name="P:WePay.Risk.Request.FindRequest.AssociatedObjectType">
            <summary>
            The type of object that this rbit is associated with. 
            (Enumeration of these values can be found in WePay.Risk.Common.AssociatedObjectTypes)
            </summary>
        </member>
        <member name="P:WePay.Risk.Request.FindRequest.AssoicatedObjectId">
            <summary>
            The unique ID of the object that this rbit is associated with.
            </summary>
        </member>
        <member name="P:WePay.Risk.Request.FindRequest.Type">
            <summary>
            The type of rbit.
            (Enumeration of these values can be found in WePay.Risk.Common.RbitTypes)
            </summary>
        </member>
        <member name="P:WePay.Risk.Request.FindRequest.Source">
            <summary>
            Source of the information
            (Enumeration of these values can be found in WePay.Risk.Common.Sources)
            </summary>
        </member>
        <member name="P:WePay.Risk.Request.LookupRequest.RbitId">
            <summary>
            The unique ID of the rbit you want to look up.
            </summary>
        </member>
        <member name="P:WePay.Risk.Response.DeleteResponse.RbitId">
            <summary>
            The unique ID of the rbit.
            </summary>
        </member>
        <member name="P:WePay.Risk.Response.DeleteResponse.State">
            <summary>
            The state of the rbit.
            </summary>
        </member>
        <member name="P:WePay.Risk.Response.LookupResponse.RbitId">
            <summary>
            The unique ID of the rbit.
            </summary>
        </member>
        <member name="P:WePay.Risk.Response.LookupResponse.AssociatedObjectType">
            <summary>
            The type of object that this rbit is associated with. 
            (Enumeration of these values can be found in WePay.Risk.Common.AssociatedObjectTypes)
            </summary>
        </member>
        <member name="P:WePay.Risk.Response.LookupResponse.AssoicatedObjectId">
            <summary>
            The unique ID of the object that this rbit is associated with.
            </summary>
        </member>
        <member name="P:WePay.Risk.Response.LookupResponse.Type">
            <summary>
            The type of rbit.
            (Enumeration of these values can be found in WePay.Risk.Common.RbitTypes)
            </summary>
        </member>
        <member name="P:WePay.Risk.Response.LookupResponse.Properties">
            <summary>
            The properties of the rbit will depend on the type (see rbit types for a list of properties that you can set for each type).
            </summary>
        </member>
        <member name="P:WePay.Risk.Response.LookupResponse.ReceiveTime">
            <summary>
            The Unix time when the data in this rbit was first obtained.
            </summary>
        </member>
        <member name="P:WePay.Risk.Response.LookupResponse.Source">
            <summary>
            Source of the information
            (Enumeration of these values can be found in WePay.Risk.Common.Sources)
            </summary>
        </member>
        <member name="P:WePay.Risk.Response.LookupResponse.Note">
            <summary>
            Free form note giving more context about the information.
            Used by Risk Analysts during manual review.
            </summary>
        </member>
        <member name="P:WePay.Risk.Response.LookupResponse.RelatedRbits">
            <summary>
            Array of rbits associated with this object.
            </summary>
        </member>
        <member name="T:WePay.Risk.RiskService">
            <summary>
            The Risk API provides a way to communicate risk-related account and transaction level information between an application and WePay.
            An application and WePay will use this information to improve its risk decisioning process on both sides and provide better
            information to the user.
            All Risk API calls require WePay permission.
            An Rbit contains risk related information about your users, their accounts, and their transactions.
            </summary>
        </member>
        <member name="M:WePay.Risk.RiskService.LookupAsync(WePay.Risk.Request.LookupRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            This call allows you to lookup the details of a specific rbit on WePay using the RbitId.
            PERMISSION REQUIRED
            </summary>
            <param name="lookupRequest"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.Risk.RiskService.CreateAsync(WePay.Risk.Request.CreateRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to create a new rbit for a user, account, or transaction.
            PERMISSION REQUIRED
            </summary>
            <param name="createRequest"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.Risk.RiskService.FindAsync(WePay.Risk.Request.FindRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to search the rbits of the user associated with the access token used to make the call.
            Returns an array of matching rbits.
            PERMISSION REQUIRED
            </summary>
            <param name="findRequest"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.Risk.RiskService.DeleteAsync(WePay.Risk.Request.DeleteRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to delete a specified Rbit.
            PERMISSION REQUIRED
            </summary>
            <param name="deleteRequest"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="T:WePay.Risk.Structure.Rbit.AddressRbit">
            <summary>
            A mailing address associated with a user or account.
            Rbits of type address should be sent either as a related rbit of type = person or as a top level rbit
            for an account
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.AddressRbit.Type">
            <summary>
            The value describing the kind of risk information the rbit contains.
            (Enumeration of these values can be found in WePay.Risk.Common.RbitTypes)
            PROTIP: You don't need to set this, I already did it for you
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.AddressRbit.Properties">
            <summary>
            A parameter set to the key value pair of properties for this type.
            </summary>
        </member>
        <member name="T:WePay.Risk.Structure.Rbit.AutoBillingRbit">
            <summary>
            If the transaction is set-up for auto-billing (where the users card is charged automatically every month),
            include this rbit to provide details of the auto-billing.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.AutoBillingRbit.Type">
            <summary>
            The value describing the kind of risk information the rbit contains.
            (Enumeration of these values can be found in WePay.Risk.Common.RbitTypes)
            PROTIP: You don't need to set this, I already did it for you
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.AutoBillingRbit.Properties">
            <summary>
            A parameter set to the key value pair of properties for this type.
            </summary>
        </member>
        <member name="T:WePay.Risk.Structure.Rbit.BusinessDescriptionRbit">
            <summary>
            Rbts of type 'BusinessDescription” should be sent as a top-level rbit for an account.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.BusinessDescriptionRbit.Type">
            <summary>
            The value describing the kind of risk information the rbit contains.
            (Enumeration of these values can be found in WePay.Risk.Common.RbitTypes)
            PROTIP: You don't need to set this, I already did it for you
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.BusinessDescriptionRbit.Properties">
            <summary>
            A parameter set to the key value pair of properties for this type.
            </summary>
        </member>
        <member name="T:WePay.Risk.Structure.Rbit.BusinessNameRbit">
            <summary>
            The business name associated with an account.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.BusinessNameRbit.Type">
            <summary>
            The value describing the kind of risk information the rbit contains.
            (Enumeration of these values can be found in WePay.Risk.Common.RbitTypes)
            PROTIP: You don't need to set this, I already did it for you
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.BusinessNameRbit.Properties">
            <summary>
            A parameter set to the key value pair of properties for this type.
            </summary>
        </member>
        <member name="T:WePay.Risk.Structure.Rbit.EmailRbit">
            <summary>
            The email address associated with an entity.
            Usually passed in as a RelatedRbit of type = person
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.EmailRbit.Type">
            <summary>
            The value describing the kind of risk information the rbit contains.
            (Enumeration of these values can be found in WePay.Risk.Common.RbitTypes)
            PROTIP: You don't need to set this, I already did it for you
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.EmailRbit.Properties">
            <summary>
            A parameter set to the key value pair of properties for this type.
            </summary>
        </member>
        <member name="T:WePay.Risk.Structure.Rbit.ExternalAccountRbit">
            <summary>
            The user’s external accounts, such as Facebook or Twitter.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.ExternalAccountRbit.Type">
            <summary>
            The value describing the kind of risk information the rbit contains.
            (Enumeration of these values can be found in WePay.Risk.Common.RbitTypes)
            PROTIP: You don't need to set this, I already did it for you
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.ExternalAccountRbit.Properties">
            <summary>
            A parameter set to the key value pair of properties for this type.
            </summary>
        </member>
        <member name="T:WePay.Risk.Structure.Rbit.FundraisingEventRbit">
            <summary>
            Information about an event that is the context for a donation transaction or donation account.
            It can therefore be passed as an rbit associated with a checkout or an account.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.FundraisingEventRbit.Type">
            <summary>
            The value describing the kind of risk information the rbit contains.
            (Enumeration of these values can be found in WePay.Risk.Common.RbitTypes)
            PROTIP: You don't need to set this, I already did it for you
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.FundraisingEventRbit.Properties">
            <summary>
            A parameter set to the key value pair of properties for this type.
            </summary>
        </member>
        <member name="T:WePay.Risk.Structure.Rbit.IndustryCodeRbit">
            <summary>
            A code from one of several sources that indicates the industry associated with the business.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.IndustryCodeRbit.Type">
            <summary>
            The value describing the kind of risk information the rbit contains.
            (Enumeration of these values can be found in WePay.Risk.Common.RbitTypes)
            PROTIP: You don't need to set this, I already did it for you
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.IndustryCodeRbit.Properties">
            <summary>
            A parameter set to the key value pair of properties for this type.
            </summary>
        </member>
        <member name="T:WePay.Risk.Structure.Rbit.PartnerServiceRbit">
            <summary>
            This type describes one type of service or product the user has signed up for on the partner site.
            This should be passed as a related rbit of the ExternalAccount rbit that contains partner site information.
            If the user is signed up for multiple services, you can pass multiple related rbits.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.PartnerServiceRbit.Type">
            <summary>
            The value describing the kind of risk information the rbit contains.
            (Enumeration of these values can be found in WePay.Risk.Common.RbitTypes)
            PROTIP: You don't need to set this, I already did it for you
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.PartnerServiceRbit.Properties">
            <summary>
            A parameter set to the key value pair of properties for this type.
            </summary>
        </member>
        <member name="T:WePay.Risk.Structure.Rbit.PersonRbit">
            <summary>
            Information about a person associated with a user or account.
            It could be a person who does not have formal access to the user or account (e.g., an employee of a company who provided information).
            Rbits of type person are usually associated with the following related rbits: Phone and Address.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.PersonRbit.Type">
            <summary>
            The value describing the kind of risk information the rbit contains.
            (Enumeration of these values can be found in WePay.Risk.Common.RbitTypes)
            PROTIP: You don't need to set this, I already did it for you
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.PersonRbit.Properties">
            <summary>
            A parameter set to the key value pair of properties for this type.
            </summary>
        </member>
        <member name="T:WePay.Risk.Structure.Rbit.PhoneRbit">
            <summary>
            A phone number associated with a user or account.
            Rbits of type phone should be sent either as a related rbit of type = person or as a top level rbit for an account 
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.PhoneRbit.Type">
            <summary>
            The value describing the kind of risk information the rbit contains.
            (Enumeration of these values can be found in WePay.Risk.Common.RbitTypes)
            PROTIP: You don't need to set this, I already did it for you
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.PhoneRbit.Properties">
            <summary>
            A parameter set to the key value pair of properties for this type.
            </summary>
        </member>
        <member name="T:WePay.Risk.Structure.Rbit.Rbit">
            <summary>
            Base class for Rbits
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.Rbit.TypeContainer">
            <summary>
            Container to hold the Type to make derived classes "immutable"
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.Rbit.Type">
            <summary>
            The value describing the kind of risk information the rbit contains.
            (Enumeration of these values can be found in WePay.Risk.Common.RbitTypes)
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.Rbit.Properties">
            <summary>
            A parameter set to the key value pair of properties for this type.
            The properties of the rbit will depend on the type.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.Rbit.AssociatedObjectType">
            <summary>
            The type of object that this rbit is associated with. 
            (Enumeration of these values can be found in WePay.Risk.Common.AssociatedObjectTypes)
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.Rbit.AssoicatedObjectId">
            <summary>
            The unique ID of the object that this rbit is associated with.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.Rbit.ReceiveTime">
            <summary>
            The Unix time when the data in this rbit was first obtained.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.Rbit.Source">
            <summary>
            The type of object that this rbit is associated with. 
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.AddressRbitProperties.RbitType">
            <summary>
            Not an API field, only use for validating requests, mainly for testing purposes
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.AddressRbitProperties.Address">
            <summary>
            An address associated with a user or account
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.AddressRbitProperties.AddressType">
            <summary>
            The type of Address
            (Enumeration of these values can be found in WePay.Risk.Common.AddressTypes)
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.AddressRbitProperties.NormalizedAddress">
            <summary>
            Normalized version of Address
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.AddressRbitProperties.NormalizedSource">
            <summary>
            String with vendor for address normalization.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.AddressRbitProperties.NormalizedAddressStatus">
            <summary>
            The normalized address status
            (Enumeration of these values can be found in WePay.Risk.Common.NormalizedAddressStatuses)
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.AutoBillingRbitProperties.RbitType">
            <summary>
            Not an API field, only use for validating requests, mainly for testing purposes
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.AutoBillingRbitProperties.AutobillSetupTime">
            <summary>
            Unix timestamp when auto-bill was first set up or last updated by the user.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.AutoBillingRbitProperties.PaymentNumber">
            <summary>
            If this is the first payment of the auto-billing, PaymentNumber should be set to 1.
            If the second, PaymentNumber should be set to 2, etc.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.AutoBillingRbitProperties.TotalPaymentsScheduled">
            <summary>
            The number of payments that are scheduled to be auto-billed.
            For example, if a payer is paying for an item over three installments,
            TotalPaymentsScheduled should be set to 3.
            If there is no scheduled end to the auto-billed payments, do not include this parameter.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.AutoBillingRbitProperties.PaymentFrequency">
            <summary>
            How often they should be billed.
            (Enumeration of these values can be found in WePay.Risk.Common.PaymentFrequencies)
            Note: Alternatively you may specify the number of days/weeks/months/years as follows,
            n(d/w/m/y) where n is a positive integer. E.g. 4d is 4 days, 5m is 5 months etc.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.AutoBillingRbitProperties.SetupBy">
            <summary>
            Who set-up the auto-billing
            (Enumeration of these values can be found in WePay.Risk.Common.AutoBillingCreators)
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.BusinessDescriptionRbitProperties.RbitType">
            <summary>
            Not an API field, only use for validating requests, mainly for testing purposes
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.BusinessDescriptionRbitProperties.BusinessDescription">
            <summary>
            Text description of the business.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.BusinessDescriptionRbitProperties.NumberOfEmployees">
            <summary>
            Number of employees employed by the business.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.BusinessDescriptionRbitProperties.SalesTaxLiabilityFlag">
            <summary>
            true: indicates that this merchant collects sales tax for each transaction
            false: indicates that this merchant does not collect sales tax for each transaction
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.BusinessNameRbitProperties.RbitType">
            <summary>
            Not an API field, only use for validating requests, mainly for testing purposes
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.BusinessNameRbitProperties.BusinessName">
            <summary>
            The full name of the business.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.BusinessNameRbitProperties.NameType">
            <summary>
            The kind of name used for the business.
            (Enumeration of these values can be found in WePay.Risk.Common.BusinessNameTypes)
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.EmailRbitProperties.RbitType">
            <summary>
            Not an API field, only use for validating requests, mainly for testing purposes
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.EmailRbitProperties.Email">
            <summary>
            Email address
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.ExternalAccountRbitProperties.RbitType">
            <summary>
            Not an API field, only use for validating requests, mainly for testing purposes
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.ExternalAccountRbitProperties.IsPartnerAccount">
            <summary>
            (Enumeration of these values can be found in WePay.Risk.Common.IsPartnerAccountOptions)
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.ExternalAccountRbitProperties.AccountType">
            <summary>
            Name of the provider of the account.
            If this is an account controlled by you, set this parameter to the name of the company where the account was created
            (Enumeration of these values can be found in WePay.Risk.Common.ExternalAccountTypes)
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.ExternalAccountRbitProperties.UserId">
            <summary>
            The user's ID of the external account.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.ExternalAccountRbitProperties.Uri">
            <summary>
            The user's profile URL on the external service.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.ExternalAccountRbitProperties.CreateTime">
            <summary>
            The Unix timestamp when external account was created (unix seconds since Jan 1st 1970 UTC).
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.ExternalAccountRbitProperties.ModifyTime">
            <summary>
            The Unix timestamp when external account was modified (unix seconds since Jan 1st 1970 UTC).
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.ExternalAccountRbitProperties.Following">
            <summary>
            The number of people the user is following (Twitter) or has in his/her circles (Google+).
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.ExternalAccountRbitProperties.Followers">
            <summary>
            The number of followers (Twitter) or the number of members in his/her circles (Google+).
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.ExternalAccountRbitProperties.Connections">
            <summary>
            The number of friends (Facebook) or connections (LinkedIn).
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.ExternalAccountRbitProperties.FeedbackScoresProvided">
            <summary>
            Number of times this user has received feedback.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.ExternalAccountRbitProperties.FeedbackScorePercentPositive">
            <summary>
            Percentage of feedback which is positive (for positive / negative scoring systems).
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.ExternalAccountRbitProperties.FeedbackAverageScore">
            <summary>
            Average feedback score for this user (for star rating feedback systems) normalized between 0.0 (worst) and 1.0 (best).
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.FundraisingEventRbitProperties.RbitType">
            <summary>
            Not an API field, only use for validating requests, mainly for testing purposes
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.FundraisingEventRbitProperties.Name">
            <summary>
            Name of the fundraising event.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.FundraisingEventRbitProperties.EventTime">
            <summary>
            The Unix time of when the event starts.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.FundraisingEventRbitProperties.GivingDeadline">
            <summary>
            The Unix time of deadline for when donations will no longer be accepted.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.FundraisingEventRbitProperties.FundraisingGoal">
            <summary>
            The fundraising goal established by the event organizers
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.FundraisingEventRbitProperties.Currency">
            <summary>
            The currency used.
            (Enumeration of these values can be found in WePay.Shared.Common.Currencies)
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.FundraisingEventRbitProperties.Uri">
            <summary>
            URI that points to the fundraising event page
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.IndustryCodeRbitProperties.RbitType">
            <summary>
            Not an API field, only use for validating requests, mainly for testing purposes
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.IndustryCodeRbitProperties.IndustryCodeType">
            <summary>
            The Industry Code Type
            (Enumeration of these values can be found in WePay.Risk.Common.IndustryCodeTypes)
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.IndustryCodeRbitProperties.IndustryCode">
            <summary>
            The industry code for the IndustryType set. Either the Mcc, Sic, or Naics industry code.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.IndustryCodeRbitProperties.IndustryDetail">
            <summary>
            Additional text describing the industry code.
            For example, this may be category or actual drop-down text selected by the end user that maps to a particular industry code.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.PartnerServiceRbitProperties.RbitType">
            <summary>
            Not an API field, only use for validating requests, mainly for testing purposes
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.PartnerServiceRbitProperties.ServiceName">
            <summary>
            The name of the service or product the user has signed up for on the partner s site.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.PartnerServiceRbitProperties.ServiceMonthlyCost">
            <summary>
            Monthly cost of the service.
            If billed annually, provide the average monthly amount.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.PartnerServiceRbitProperties.Currency">
            <summary>
            The currency used.
            (Enumeration of these values can be found in WePay.Shared.Common.Currencies)
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.PartnerServiceRbitProperties.ModulesUsed">
            <summary>
            Array of PartnerServices for each module the user has signed up for in the partner's site
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.PersonRbitProperties.RbitType">
            <summary>
            Not an API field, only use for validating requests, mainly for testing purposes
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.PersonRbitProperties.Name">
            <summary>
            The full name of the person
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.PersonRbitProperties.Birthdate">
            <summary>
            The birthdate of the person. Must be in YYYY-MM-DD format. i.e 1989-08-10
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.PersonRbitProperties.Role">
            <summary>
            The role the person currently satisfies
            (Enumeration of these values can be found in WePay.Risk.Common.PersonRoles)
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.PhoneRbitProperties.RbitType">
            <summary>
            Not an API field, only use for validating requests, mainly for testing purposes
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.PhoneRbitProperties.Phone">
            <summary>
            Phone number, ideally including country code prefix (+1 for US)
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.PhoneRbitProperties.PhoneType">
            <summary>
            The type of phone number.
            (Enumeration of these values can be found in WePay.Risk.Common.PhoneTypes)
            </summary>
        </member>
        <member name="T:WePay.Risk.Structure.Rbit.RbitProperties.RbitProperties">
            <summary>
            Base class for RbitProperties
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.RbitProperties.RbitTypeContainer">
            <summary>
            Holds the value for type so it can't be overridden
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.RbitProperties.RbitType">
            <summary>
            The value describing the kind of risk information the rbit contains.
            (Enumeration of these values can be found in WePay.Risk.Common.RbitTypes)
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.TransactionDetailsRbitProperties.RbitType">
            <summary>
            Not an API field, only use for validating requests, mainly for testing purposes
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.TransactionDetailsRbitProperties.ReceiptUri">
            <summary>
            The buyer agreement or transactions page URL on the application's website or service (e.g. receipt page).
            It can be HTML, PDF, image, or any other type of file.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.TransactionDetailsRbitProperties.ItemizedReceipt">
            <summary>
            Array of ReceiptLineItems providing all the line item details of the transaction (including tax and shipping line items).
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.TransactionDetailsRbitProperties.TermsUri">
            <summary>
            URL of the terms of service for the transaction.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.TransactionDetailsRbitProperties.ShippingAddress">
            <summary>
            The shipping address for this transaction (if transaction is shipped).
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.TransactionDetailsRbitProperties.ShippingInfo">
            <summary>
            Array of ShippingInfos that describe the shipment status.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.TransactionDetailsRbitProperties.ServiceAddress">
            <summary>
            Optional address of where the service is consumed.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.TransactionDetailsRbitProperties.TermsText">
            <summary>
            Terms associated with the invoice or transaction.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.TransactionDetailsRbitProperties.PoNumber">
            <summary>
            Purchase order number.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.TransactionDetailsRbitProperties.Discount">
            <summary>
            Discount (if any) on the order.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.TransactionDetailsRbitProperties.Note">
            <summary>
            Optional note on the invoice or address.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.WebsiteUriRbitProperties.RbitType">
            <summary>
            Not an API field, only use for validating requests, mainly for testing purposes
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.RbitProperties.WebsiteUriRbitProperties.Uri">
            <summary>
            Website Uri
            </summary>
        </member>
        <member name="T:WePay.Risk.Structure.Rbit.TransactionDetailsRbit">
            <summary>
            Information regarding a specific transaction.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.TransactionDetailsRbit.Type">
            <summary>
            The value describing the kind of risk information the rbit contains.
            (Enumeration of these values can be found in WePay.Risk.Common.RbitTypes)
            PROTIP: You don't need to set this, I already did it for you
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.TransactionDetailsRbit.Properties">
            <summary>
            A parameter set to the key value pair of properties for this type.
            </summary>
        </member>
        <member name="T:WePay.Risk.Structure.Rbit.WebsiteUriRbit">
            <summary>
            Information regarding a website url
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.WebsiteUriRbit.Type">
            <summary>
            The value describing the kind of risk information the rbit contains.
            (Enumeration of these values can be found in WePay.Risk.Common.RbitTypes)
            PROTIP: You don't need to set this, I already did it for you
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.Rbit.WebsiteUriRbit.Properties">
            <summary>
            A parameter set to the key value pair of properties for this type.
            </summary>
        </member>
        <member name="T:WePay.Risk.Structure.ReceiptLineItem">
            <summary>
            Contains details about a specific line item on a receipt.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.ReceiptLineItem.Description">
            <summary>
            Line item description.
            Could be a normal line item, a discount line item, tax, or shipping.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.ReceiptLineItem.ItemPrice">
            <summary>
            Item price per unit.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.ReceiptLineItem.Quantity">
            <summary>
            Quantity of the line items.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.ReceiptLineItem.Currency">
            <summary>
            The currency used.
            (Enumeration of these values can be found in WePay.Shared.Common.Currencies)
            Default: US
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.ReceiptLineItem.Amount">
            <summary>
            Amount = (ItemPrice x Quantity)
            PROTIP: You don't need to set this, I made a setter that does it for you as long as you set the Quantity and ItemPrice.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.ReceiptLineItem.ProjectName">
            <summary>
            Name of project this item is related to.
            If a separate "project" rbit is provided, this should match the project name in that rbit.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.ReceiptLineItem.ServiceBillingMethod">
            <summary>
            The service billing method used.
            (Enumeration of these values can be found in WePay.Risk.Common.ServiceBillingMethods)
            </summary>
        </member>
        <member name="T:WePay.Risk.Structure.ShippingInfo">
            <summary>
            Contains details about a shipment of goods or services.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.ShippingInfo.ExpectedDeliveryTime">
            <summary>
            The Unix timestamp when goods or services are expected to be delivered (seconds since Jan 1st 1970 UTC).
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.ShippingInfo.ShippingTime">
            <summary>
            The Unix timestamp when goods have been shipped (seconds since Jan 1st 1970 UTC).
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.ShippingInfo.Carrier">
            <summary>
            The shipping carrier (USPS, FEDEX, etc).
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.ShippingInfo.TrackingNumber">
            <summary>
            The tracking number for the shipping carrier.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.ShippingInfo.TrackingUrl">
            <summary>
            The URL for the tracking information.
            </summary>
        </member>
        <member name="P:WePay.Risk.Structure.ShippingInfo.ActualDeliveryTime">
            <summary>
            The Unix timestamp when goods or services were actually delivered (seconds since Jan 1st 1970 UTC).
            </summary>
        </member>
        <member name="P:WePay.Settlement.Request.AuthorizeRequest.SettlementBankId">
            <summary>
            The unique ID returned by the Settlement Create call.
            </summary>
        </member>
        <member name="P:WePay.Settlement.Request.AuthorizeRequest.AccountId">
            <summary>
            The unique ID of the account you want to look up.
            </summary>
        </member>
        <member name="P:WePay.Settlement.Request.CreateRequest.ClientId">
            <summary>
            The unique ID of your API application.
            This can be located on your app dashboard.
            </summary>
        </member>
        <member name="P:WePay.Settlement.Request.CreateRequest.AccountId">
            <summary>
            The unique ID of the account.
            </summary>
        </member>
        <member name="P:WePay.Settlement.Request.CreateRequest.Email">
            <summary>
            The merchant's email address.
            This must match the email used in the User - Register call used to setup the merchant.
            </summary>
        </member>
        <member name="P:WePay.Settlement.Response.AuthorizeResponse.SettlementBankId">
            <summary>
            The unique ID for the merchant's settlement bank.
            </summary>
        </member>
        <member name="P:WePay.Settlement.Response.AuthorizeResponse.BankName">
            <summary>
            The name of the merchant's bank.
            </summary>
        </member>
        <member name="P:WePay.Settlement.Response.AuthorizeResponse.AccountLastFour">
            <summary>
            The last four digits of the merchant's bank account number.
            </summary>
        </member>
        <member name="P:WePay.Settlement.Response.CreateResponse.SettlementBankId">
            <summary>
            A unique identifier for the settlement bank.
            </summary>
        </member>
        <member name="M:WePay.Settlement.SettlementService.CreateAsync(WePay.Settlement.Request.CreateRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            This call creates a new settlement bank account object which can be safely referred to using the returned SettlementBankId.
            This API call should be invoked using the WePay JavaScript library.
            However, if you are making this call from a server, you should include the optional Risk Headers on this API call.
            CAUTION: Do not provide an access token for this call.
            Instead, it must be confirmed using the Authorize call within 30 minutes of creation.
            </summary>
            <param name="createRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.Settlement.SettlementService.AuthorizeAsync(WePay.Settlement.Request.AuthorizeRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            After a bank account has been defined using the Create call, it must be authorized within 30 minutes using the server-to-server Authorize call.
            When making this call, you must use the access token associated with the merchant.
            </summary>
            <param name="authorizeRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="T:WePay.Settlement.Structure.CaInstitution">
            <summary>
            Contains information about a Canadian financial institution.
            </summary>
        </member>
        <member name="P:WePay.Settlement.Structure.CaInstitution.Name">
            <summary>
            The name of the financial institution.
            </summary>
        </member>
        <member name="P:WePay.Settlement.Structure.CaInstitution.TransitNumber">
            <summary>
            A number that uniquely identifies a specific financial institution, used for electronic funds transmission.
            </summary>
        </member>
        <member name="P:WePay.Settlement.Structure.CaInstitution.InstitutionNumber">
            <summary>
            A unique identifier for a Canadian bank or financial institution.
            </summary>
        </member>
        <member name="P:WePay.Settlement.Structure.CaInstitution.AccountNumber">
            <summary>
            The merchant's bank account number.
            </summary>
        </member>
        <member name="P:WePay.Settlement.Structure.CaInstitution.AccountType">
            <summary>
            The type of account to which funds are transmitted.
            (Enumeration of these values can be found in WePay.Shared.Common.BankAccountTypes)
            </summary>
        </member>
        <member name="T:WePay.Settlement.Structure.GbInstitution">
            <summary>
            Contains information about a UK financial Institution.
            </summary>
        </member>
        <member name="P:WePay.Settlement.Structure.GbInstitution.Name">
            <summary>
            The name of the financial institution.
            </summary>
        </member>
        <member name="P:WePay.Settlement.Structure.GbInstitution.SortCode">
            <summary>
            A six digit bank code used to route money transfers between banks.
            </summary>
        </member>
        <member name="P:WePay.Settlement.Structure.GbInstitution.AccountNumber">
            <summary>
            The merchant's account number.
            </summary>
        </member>
        <member name="T:WePay.Settlement.Structure.UsInstitution">
            <summary>
            Contains information about a US financial institution.
            </summary>
        </member>
        <member name="P:WePay.Settlement.Structure.UsInstitution.Name">
            <summary>
            The name of the institution.
            </summary>
        </member>
        <member name="P:WePay.Settlement.Structure.UsInstitution.RoutingNumber">
            <summary>
            A unique identifier indicating a specific US financial institution.
            </summary>
        </member>
        <member name="P:WePay.Settlement.Structure.UsInstitution.AccountNumber">
            <summary>
            The merchant's account number.
            </summary>
        </member>
        <member name="P:WePay.Settlement.Structure.UsInstitution.AccountType">
            <summary>
            The type of account to which funds are transmitted.
            (Enumeration of these values can be found in WePay.Shared.Common.BankAccountTypes)
            </summary>
        </member>
        <member name="T:WePay.Shared.Common.BankAccountTypes">
            <summary>
            All possible bank account types currently supported by WePay
            </summary>
        </member>
        <member name="T:WePay.Shared.Common.BankAccountTypes.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.BankAccountTypes.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Shared.Common.Countries">
            <summary>
            All countries currently supported by WePay
            </summary>
        </member>
        <member name="T:WePay.Shared.Common.Countries.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.Countries.US">
            <summary>
            United States
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.Countries.CA">
            <summary>
            Canada
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.Countries.GB">
            <summary>
            Great Britain
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.Countries.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Shared.Common.Currencies">
            <summary>
            All currencies currently supported by WePay
            </summary>
        </member>
        <member name="T:WePay.Shared.Common.Currencies.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.Currencies.USD">
            <summary>
            US Dollar
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.Currencies.CAD">
            <summary>
            Canadian Dollar
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.Currencies.GBP">
            <summary>
            Great British Pound
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.Currencies.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Shared.Common.ErrorCategories">
            <summary>
            All possible types of errors which can be returned from WePay
            </summary>
        </member>
        <member name="T:WePay.Shared.Common.ErrorCategories.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCategories.InvalidRequest">
            <summary>
            The API call had a malformed URI, or incorrect or invalid parameters.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCategories.AccessDenied">
            <summary>
            The API call tried to access a resource that it does not have permission to access.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCategories.InvalidScope">
            <summary>
            The API call provided non existent permissions in a scope parameter.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCategories.InvalidClient">
            <summary>
            The API call provided a ClientId for a client that does not exist, or has been disabled.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCategories.ProcessingError">
            <summary>
            There was an error on WePay’s end.
            If you receive this message, please contact api@wepay.com (https://developer.wepay.com/api/general/api@wepay.com). 
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCategories.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Shared.Common.ErrorCodes">
            <summary>
            All possible Error Codes which WePay can return with an Error response.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.GenericApiEndPointDoesNotExist">
            <summary>
            You try to make an API call that doesn’t exist like /user/robots.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.GenericMissingRequiredHeader">
            <summary>
            You are missing a required header such as User-Agent, Content-Type, or Authorization.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.GenericPassedInvalidParameter">
            <summary>
            You passed an invalid parameter value such “robot” for the “fee_payer” parameter.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.GenericFailedToPassRequiredParameter">
            <summary>
            You did not pass a required parameter.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.GenericMalformedJson">
            <summary>
            We were unable to parse the parameters you passed (ie your JSON is malformed).
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.GenericUnableToAuthenticate">
            <summary>
            We were completely unable to authenticate your request (probably your access_token doesn’t exist).
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.GenericTooManyRequests">
            <summary>
            You have made too many requests in a short time period. See our throttling documentation for more details.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.GenericUnexpectedError">
            <summary>
            WePay encountered an unexpected error. Contact api@wepay.com.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.GenericUserDisplayable">
            <summary>
            This error can be displayed to the user and generally relates to user data - long term this code will be replaced by more specific error codes.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.GenericInsufficientPermissions">
            <summary>
            You do not have sufficient permissions to perform the requested action.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.GenericAccessTokenRevoked">
            <summary>
            The AccessToken you passed has been revoked.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.GenericOAuth2Expired">
            <summary>
            The code parameter (OAuth2) has expired.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.GenericClientIdDoesNotMatchCodeParameter">
            <summary>
            The ClientId you passed does not match the code parameter.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.GenericIpAddressNotOnWhitelist">
            <summary>
            IP address you are making API calls from is not on the IP whitelist for your app.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.GenericApiVersionInvalidOrExpired">
            <summary>
            API Version is invalid or expired.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.GenericInvalidApiVersionForApp">
            <summary>
            The API version specified in the ‘Api-Version’ header used in the request is not valid for the app.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.PaymentAvsCheckOnPaymentFailed">
            <summary>
            The AVS check on the payment failed (invalid billing address).
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.PaymentCardTypeUnsupported">
            <summary>
            The card type is not supported (i.e. not Visa, MasterCard, American Express, Discover, JCB, or Diners Club).
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.PaymentBankIndicatedCardUnsupported">
            <summary>
            The issuing bank indicated that the card is not supported.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.PaymentBankUnspecifiedChargeDeclined">
            <summary>
            The issuing bank declined the charge but did not tell us why (generally due to a fraud check on their side).
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.PaymentInsufficientFunds">
            <summary>
            The payment method does not have sufficient funds to make the payment.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.PaymentCardLostOrStolen">
            <summary>
            The card has been lost or stolen.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.PaymentCardExpired">
            <summary>
            The card has expired (some issuing banks don’t care though and we only care if they do).
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.PaymentInvalidCardData">
            <summary>
            Some of the card data was invalid (CVV, expiration date, card number, name on card).
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.PaymentInvalidStateForAction">
            <summary>
            The CreditCard object is in an invalid state for that action.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.AccountDoesNotExist">
            <summary>
            The account you are trying to access does not exist.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.AccountInsufficientPermissions">
            <summary>
            The AccessToken you have passed belongs to a user that does not have permission to view/modify that account.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.AccountDeleted">
            <summary>
            The account has been deleted.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.AccountCannotTransact">
            <summary>
            The account cannot transact.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.AccountInsufficientFunds">
            <summary>
            The account lacks sufficient funds for the action requested.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.AccountKycAlreadyProvided">
            <summary>
            The account already provided KYC information.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.AccountRequiresKycForCall">
            <summary>
            The account must go through KYC before this call can be made.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.AccountMustCompleteSettlementInformation">
            <summary>
            The account must complete settlement information before requesting account review.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.AccountMustSupplySocialSecurityNumberForKyc">
            <summary>
            The account must supply a 9-digit social security number when completing KYC.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.AccountKycMustBeInStateRequireDocs">
            <summary>
            The account KYC state must be in state 'RequireDocs' when calling KnowYourCustomer Modify.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.AccountKycFilesNotFound">
            <summary>
            The account does not own the files specified when calling KnowYourCustomer Modify.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.AccountRequiresAccountOwnerKycField">
            <summary>
            The account is required to supply the AccountOwner KYC field, however, KYC was attempted to be completed without it.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.MembershipMustUseFinancialAdmisitratorAccessToken">
            <summary>
            You must use the financial administrator’s access token.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.MembershipCannotChangeFinancialAdministrator">
            <summary>
            Cannot change financial administrator once withdrawals have started.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.CheckoutDoesNotExist">
            <summary>
            The checkout you are trying to view/edit does not exist.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.CheckoutInsufficientPermissions">
            <summary>
            The AccessToken you have passed belongs to a user that does not have permission to view/modify that checkout.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.CheckoutPaymentMethodDoesNotExist">
            <summary>
            The payment method you passed does not exist or does not belong to the user/app you are authenticated as.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.CheckoutInvalidStateForAction">
            <summary>
            The checkout is in an invalid state for that action.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.CheckoutCannotAddSignature">
            <summary>
            Cannot add signature to this checkout.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.PreapprovalDoesNotExist">
            <summary>
            The preapproval does not exist.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.PreapprovalInsufficientPermissions">
            <summary>
            The access_token you have passed belongs to a user that does not have permission to view/modify that checkout.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.PreapprovalCannotAccess">
            <summary>
            If you authenticated with a ClientId/ClientSecret (for app-level preapprovals) then your app cannot access that preapproval.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.PreapprovalStartTimeNotYetPassed">
            <summary>
            You are trying to execute a preapproval where the StartTime has not passed.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.PreapprovalEndTimeAlreadyPassed">
            <summary>
            You are trying to execute a preapproval where the EndTime has already passed.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.PreapprovalInvalidStateForAction">
            <summary>
            The preapproval is in the incorrect state for that action.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.PreapprovalTooManyUnsuccessfulAuthorizationAttempts">
            <summary>
            You have tried to authorize the payment method unsuccessfully too many times with this preapproval
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.PreapprovalAccountPreapprovalMismatch">
            <summary>
            You are trying to make a payment to an account that this preapproval is not tied to.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.PreapprovalCheckoutFrequencyExceeded">
            <summary>
            You have already executed as many checkouts on this period as you are allowed to based on the frequency parameter you set.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.PreapprovalAmountPerPeriodExceeded">
            <summary>
            You have already reached the amount per period limit you set for this preapproval.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.PreapprovalSimultaneousPaymentExecution">
            <summary>
            You tried to execute two simultaenous payments on a single preapproval.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.WithdrawalDoesNotExist">
            <summary>
            The withdrawal you are trying to access does not exist.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.WithdrawalInsufficientPermissions">
            <summary>
            The AccessToken you have passed belongs to a user that does not have permission to view/modify that withdrawal.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.UserInsufficientPermissions">
            <summary>
            You are trying to access a user that does not exist or that you do not have permission to access.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.UserInvalidStateForAction">
            <summary>
            The user is an invalid state for that action.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.UserDeleted">
            <summary>
            The user has been deleted.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.SettlementDoesNotExist">
            <summary>
            The subscription plan you are trying to view/modify does not exist.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.SettlementInsufficientPermissionsToAccessOrModifySubscriptionPlan">
            <summary>
            The AccessToken you have passed belongs to a user that does not have permission to view/modify that subscription plan.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.SettlementAppCannotAccessSubscriptionPlan">
            <summary>
            The app cannot access the subscription plan.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.SettlementSubscriptionPlanDeleted">
            <summary>
            The subscription plan has been deleted.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.SettlementSubscriptionPlanDoesNotExist">
            <summary>
            The subscription you are trying to view/modify does not exist
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.SettlementInsufficientPermissionsToAccessOrModifySubscription">
            <summary>
            The AccessToken you have passed belongs to a user that does not have permission to view/modify that subscription.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.SettlementAppCannotAccessSubscription">
            <summary>
            The app cannot access the subscription.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.SettlementSubscriptionExpired">
            <summary>
            The subscription you are trying to view/modify has expired.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.SettlementSubscriptionChangeDoesNotExist">
            <summary>
            The subscription charge you are trying to view/modify does not exist.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.SettlementInsufficientPermissionsToAccessOrModifySubscriptionChange">
            <summary>
            The AccessToken you have passed belongs to a user that does not have permission to view/modify that subscription charge.
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ErrorCodes.SettlementAppCannotAccessSubscriptionCharge">
            <summary>
            The app cannot access that subscription charge.
            </summary>
        </member>
        <member name="T:WePay.Shared.Common.Frequencies">
            <summary>
            All possible frequencies supported by WePay
            </summary>
        </member>
        <member name="T:WePay.Shared.Common.Frequencies.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.Frequencies.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Shared.Common.ProcessModes">
            <summary>
            All possible modes the process will be displayed in.
            Choose iframe if you would like to frame the process on your site.
            </summary>
        </member>
        <member name="T:WePay.Shared.Common.ProcessModes.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.ProcessModes.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Shared.Common.SettlementPaymentMethods">
            <summary>
            All possible settlement payment methods currently supported by WePay
            </summary>
        </member>
        <member name="T:WePay.Shared.Common.SettlementPaymentMethods.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.SettlementPaymentMethods.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Shared.Common.SortOrders">
            <summary>
            All possible sort orders
            </summary>
        </member>
        <member name="T:WePay.Shared.Common.SortOrders.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Shared.Common.SortOrders.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.Shared.IpnNotification">
            <summary>
            Instant Payment Notifications (IPNs) allow you to receive notifications whenever the state on an object changes
            (or something important happens to that object).
            
            To set up IPNs for an object, set a CallbackUri on that object.
            Whenever something important happens to the object that we think you should be notified of (typically a state change),
            we will make an HTTP POST request to your CallbackUri with the *TYPE*Id in the body of the request.
            </summary>
        </member>
        <member name="T:WePay.Shared.Structure.Address">
            <summary>
            The address structure contains information about a street address.
            </summary>
        </member>
        <member name="P:WePay.Shared.Structure.Address.Address1">
            <summary>
            The first line of the street address.
            </summary>
        </member>
        <member name="P:WePay.Shared.Structure.Address.Address2">
            <summary>
            The second line of the street address.
            </summary>
        </member>
        <member name="P:WePay.Shared.Structure.Address.City">
            <summary>
            The city.
            </summary>
        </member>
        <member name="P:WePay.Shared.Structure.Address.Region">
            <summary>
            Must be the 2-letter US state code for US addresses.
            Represents subdivisions (e.g. provinces or states) for other countries.
            2-letter province codes are supported for Canada.
            3-letter region codes are supported for Great Britain.
            </summary>
        </member>
        <member name="P:WePay.Shared.Structure.Address.PostalCode">
            <summary>
            The the postcode/zip for the address.
            </summary>
        </member>
        <member name="P:WePay.Shared.Structure.Address.Country">
            <summary>
            The 2-letter ISO-3166-1 country code.
            (Enumeration of these values can be found in WePay.Shared.Common.Countries)
            </summary>
        </member>
        <member name="T:WePay.Shared.Structure.ShippingAddress">
            <summary>
            The shipping address structure contains information about a shipping address.
            </summary>
        </member>
        <member name="P:WePay.Shared.Structure.ShippingAddress.Name">
            <summary>
            The name of the person.
            </summary>
        </member>
        <member name="P:WePay.Shared.Structure.ShippingAddress.Address1">
            <summary>
            The first line of the street address.
            </summary>
        </member>
        <member name="P:WePay.Shared.Structure.ShippingAddress.Address2">
            <summary>
            The second line of the street address.
            </summary>
        </member>
        <member name="P:WePay.Shared.Structure.ShippingAddress.City">
            <summary>
            The city.
            </summary>
        </member>
        <member name="P:WePay.Shared.Structure.ShippingAddress.Region">
            <summary>
            Must be the 2-letter US state code for US addresses.
            Represents subdivisions (e.g. provinces or states) for other countries.
            2-letter province codes are supported for Canada.
            3-letter region codes are supported for Great Britain.
            </summary>
        </member>
        <member name="P:WePay.Shared.Structure.ShippingAddress.PostalCode">
            <summary>
            The the postcode/zip for the address.
            </summary>
        </member>
        <member name="P:WePay.Shared.Structure.ShippingAddress.Country">
            <summary>
            The 2-letter ISO-3166-1 country code.
            (Enumeration of these values can be found in WePay.Shared.Common.Countries)
            </summary>
        </member>
        <member name="T:WePay.Shared.Structure.Theme">
            <summary>
            The theme structure contains information providing custom look-and-feel for flows and emails.
            </summary>
        </member>
        <member name="P:WePay.Shared.Structure.Theme.ThemeId">
            <summary>
            The unique theme ID (assigned by WePay).
            </summary>
        </member>
        <member name="P:WePay.Shared.Structure.Theme.Name">
            <summary>
            The name for the theme.
            </summary>
        </member>
        <member name="P:WePay.Shared.Structure.Theme.PrimaryColor">
            <summary>
            The hex triplet for the primary color on important elements such as headers.
            </summary>
        </member>
        <member name="P:WePay.Shared.Structure.Theme.SecondaryColor">
            <summary>
            The hex triplet for the secondary color on elements such as info boxes, and the focus styles on text inputs.
            </summary>
        </member>
        <member name="P:WePay.Shared.Structure.Theme.BackgroundColor">
            <summary>
            The hex triplet for the the background color for onsite and iframe pages.
            </summary>
        </member>
        <member name="P:WePay.Shared.Structure.Theme.ButtonColor">
            <summary>
            The hex triplet for the the color for primary action buttons.
            </summary>
        </member>
        <member name="T:WePay.Shared.WePayError">
            <summary>
            When an error occurs the API will respond with this
            </summary>
        </member>
        <member name="P:WePay.Shared.WePayError.Error">
            <summary>
            A generic “error” category.
            (Enumeration of these values can be found in WePay.Shared.Common.ErrorCategories)
            </summary>
        </member>
        <member name="P:WePay.Shared.WePayError.ErrorDescription">
            <summary>
            A human readable error description that explains why the error happened.
            Use this error description to debug the problem.
            </summary>
        </member>
        <member name="P:WePay.Shared.WePayError.ErrorCode">
            <summary>
            A specific error code that you can use to program responses to errors.
            (Enumeration of these values can be found in WePay.Shared.Common.ErrorCodes)
            </summary>
        </member>
        <member name="T:WePay.Shared.WePayValues">
            <summary>
            Utitlties class for building out static classes that store WePay specific values that may need to be referenced in application code
            </summary>
        </member>
        <member name="M:WePay.Shared.WePayValues.FillValuesList(System.Type,System.Collections.Generic.List{System.String})">
            <summary>
            Used to iterate through a static class and fill a List of strings with each static member that is a string
            </summary>
            <param name="type"></param>
            <param name="values"></param>
        </member>
        <member name="T:WePay.User.Common.Scopes">
            <summary>
            All possible Scopes currently recognized by WePay (PROTIP: These are just permissions a user can hold)
            </summary>
        </member>
        <member name="T:WePay.User.Common.Scopes.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="M:WePay.User.Common.Scopes.AllowAllScopes">
            <summary>
            Produces comma separated list of all scopes
            </summary>
            <returns></returns>
        </member>
        <member name="F:WePay.User.Common.Scopes.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.User.Common.UserStates">
            <summary>
            All possible UserStates currently recognized by WePay
            </summary>
        </member>
        <member name="T:WePay.User.Common.UserStates.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.User.Common.UserStates.Pending">
            <summary>
            The user registered with User Register call and has not yet confirmed the registration using the link in the confirmation email
            A user whose registration is in a pending state is subject to limitations on the total amount funds
            they may accept and the period of time during which they may accept payments before their their account is deleted.
            </summary>
        </member>
        <member name="F:WePay.User.Common.UserStates.Registered">
            <summary>
            The user's registration on WePay is complete.
            When a user is first created, an email is sent to the email address supplied at the time of their registration with a confirmation link.
            The initial state (when the confirmation email is sent) is pending.
            When the WePay system receives the confirmation, the user's state is changed to registered.
            If the user is created using the User Register call,
            a subsequent User SendConfirmation call must be made in order to send the confirmation email.
            </summary>
        </member>
        <member name="F:WePay.User.Common.UserStates.Deleted">
            <summary>
            The user's registration was deleted.
            A user may delete their account themselves, or an account may be deleted by WePay customer support.
            </summary>
        </member>
        <member name="F:WePay.User.Common.UserStates.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="T:WePay.User.Common.UserTypes.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.User.Common.UserTypes.Sso">
            <summary>
            To create an SSO user, set the value to sso.
            </summary>
        </member>
        <member name="F:WePay.User.Common.UserTypes.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="P:WePay.User.Request.ChangeEmailRequest.Email">
            <summary>
            The new email address of this user.
            </summary>
        </member>
        <member name="P:WePay.User.Request.ChangeEmailRequest.Cookie">
            <summary>
            The MFA trust cookie - required if using WePay's MFA service.
            </summary>
        </member>
        <member name="P:WePay.User.Request.ModifyRequest.CallbackUri">
            <summary>
            The callback URI where you want to receive IPNs. Must be a full URI.
            </summary>
        </member>
        <member name="P:WePay.User.Request.RegisterRequest.ClientId">
            <summary>
            The integer client ID issued to the app, found on your application's dashboard.
            </summary>
        </member>
        <member name="P:WePay.User.Request.RegisterRequest.ClientSecret">
            <summary>
            The string client secret issued to the app, found on your application's dashboard.
            </summary>
        </member>
        <member name="P:WePay.User.Request.RegisterRequest.Email">
            <summary>
            The email of the user you want to register.
            </summary>
        </member>
        <member name="P:WePay.User.Request.RegisterRequest.Scope">
            <summary>
            Custom user permission settings are no longer supported.
            Please provide a comma-separated list of all Scopes (permissions)
            (Enumeration of these values can be found in WePay.User.Common.Scopes)
            </summary>
        </member>
        <member name="P:WePay.User.Request.RegisterRequest.FirstName">
            <summary>
            The first name of the user you want to register.
            </summary>
        </member>
        <member name="P:WePay.User.Request.RegisterRequest.LastName">
            <summary>
            The last name of the user you want to register.
            </summary>
        </member>
        <member name="P:WePay.User.Request.RegisterRequest.OriginalIp">
            <summary>
            The IP address of the user you want to register.
            </summary>
        </member>
        <member name="P:WePay.User.Request.RegisterRequest.OriginalDevice">
            <summary>
            The user-agent (for web) or the IMEI (for mobile) of the user you want to register.
            </summary>
        </member>
        <member name="P:WePay.User.Request.RegisterRequest.TosAcceptanceTime">
            <summary>
            A Unix timestamp (UTC) referencing the time the user accepted WePay's terms of service.
            </summary>
        </member>
        <member name="P:WePay.User.Request.RegisterRequest.RedirectUri">
            <summary>
            The URI the user will be redirected to after they have confirmed they wanted to be registered on WePay.
            By default this will be your application's homepage.
            </summary>
        </member>
        <member name="P:WePay.User.Request.RegisterRequest.CallbackUri">
            <summary>
            The callback URI where you want to receive IPNs.
            Must be a full URI.
            </summary>
        </member>
        <member name="P:WePay.User.Request.RegisterRequest.Type">
            <summary>
            The type of user to be created.
            This parameter is used to create SSO users.
            To create an SSO user, set the value to Sso. 
            Otherwise do not include this parameter in the call.
            (Enumeration of these values can be found in WePay.User.Common.UserTypes)
            PERMISSION REQUIRED
            </summary>
        </member>
        <member name="P:WePay.User.Request.SendConfirmationRequest.EmailMessage">
            <summary>
            A short message that will be included in the email to the user.
            </summary>
        </member>
        <member name="P:WePay.User.Request.SendConfirmationRequest.EmailSubject">
            <summary>
            The subject line of the email.
            </summary>
        </member>
        <member name="P:WePay.User.Request.SendConfirmationRequest.EmailButtonText">
            <summary>
            The text on the button in the confirmation email.
            </summary>
        </member>
        <member name="P:WePay.User.Response.LookupResponse.UserId">
            <summary>
            The unique ID of the user.
            </summary>
        </member>
        <member name="P:WePay.User.Response.LookupResponse.UserName">
            <summary>
            The full name of the user.
            </summary>
        </member>
        <member name="P:WePay.User.Response.LookupResponse.FirstName">
            <summary>
            The first name of the user.
            </summary>
        </member>
        <member name="P:WePay.User.Response.LookupResponse.LastName">
            <summary>
            The last name of the user.
            </summary>
        </member>
        <member name="P:WePay.User.Response.LookupResponse.Email">
            <summary>
            The email of the user.
            </summary>
        </member>
        <member name="P:WePay.User.Response.LookupResponse.State">
            <summary>
            The current state of the User
            (Enumeration of these values can be found in WePay.User.Common.UserStates)
            </summary>
        </member>
        <member name="P:WePay.User.Response.LookupResponse.CallbackUri">
            <summary>
            The URI you want to receive IPNs on.
            </summary>
        </member>
        <member name="P:WePay.User.Response.RegisterResponse.UserId">
            <summary>
            The unique integer user ID of the user.
            </summary>
        </member>
        <member name="P:WePay.User.Response.RegisterResponse.AccessToken">
            <summary>
            The string access token that you can use to make calls on behalf of the user.
            </summary>
        </member>
        <member name="P:WePay.User.Response.RegisterResponse.TokenType">
            <summary>
            The token type.
            Only BEARER is currently supported.
            </summary>
        </member>
        <member name="P:WePay.User.Response.RegisterResponse.ExpiresIn">
            <summary>
            How much time till the access_token expires in seconds.
            If null or not present, the access token will be valid until the user revokes the AccessToken.
            </summary>
        </member>
        <member name="P:WePay.User.Response.RequestSsoTokenResponse.SsoToken">
            <summary>
            A 128-bit Universally Unique Identifier (UUID).
            The token is a one-time use only and expires after 10 minutes.
            </summary>
        </member>
        <member name="P:WePay.User.Response.RequestSsoTokenResponse.ExpireTime">
            <summary>
            The Unix timestamp (UTC) at which the SsoToken will expire.
            The time to live (TTL) defaults to 10 minutes.
            </summary>
        </member>
        <member name="T:WePay.User.UserService">
            <summary>
            The user object represents a single user registered on WePay.
            A single user may be authorized on multiple applications.
            Users are segmented by email address, whereas access tokens map to a specific user-application pair.
            </summary>
        </member>
        <member name="M:WePay.User.UserService.RegisterAsync(WePay.User.Request.RegisterRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Registers a user with your application and returns a temporary access token for that user.
            The temporary access token will expire 90 days after its creation if not approved.
            You can send the user an email to confirm their WePay account using the User SendConfirmation call.
            Unconfirmed accounts created with a temporary access token have a few restrictions:
            They can only accept $100,000.
            New payments will be disabled 14 days after they accept their first payment.
            They will be deleted 30 days after they accept their first payment.
            Once an unconfirmed account created with a temporary access token is deleted, all accepted payments are refunded.
            You must specify the ClientId and ClientSecret for your application.
            This call does not use OAuth2 authorization, so you should not pass an access token.
            </summary>
            <param name="registerRequest"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.User.UserService.LookupAsync(System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to look up details about the user associated with the access token used to make the call.
            There are no arguments necessary for this call.
            Only an access token passed in the authorization header is required.
            The access token must be that of the user whose information you are searching for.
            </summary>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.User.UserService.ModifyAsync(WePay.User.Request.ModifyRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            This call allows you to add a CallbackUri to the user object.
            If you add a CallbackUri you will receive IPNs with the UserId each time the user revokes their access token or the user is deleted. 
            </summary>
            <param name="modifyRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.User.UserService.SendConfirmationAsync(WePay.User.Request.SendConfirmationRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            For users who were registered via the User Regiser call, this API call must be used to send the registration confirmation email.
            This call can also be used later to resend the registration confirmation email as needed.
            The AccessToken returned by the associated User Register call must be passed in the authorization header.
            </summary>
            <param name="sendConfirmationRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.User.UserService.RequestSsoTokenAsync(System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to obtain a one-time use SsoToken which must be signed within 10 minutes.
            There are no arguments for this call.
            PERMISSION REQUIRED
            </summary>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.User.UserService.MarkEmailVerifiedAsync(System.String,System.Nullable{System.Boolean})">
            <summary>
            For SSO users, use this call to indicate a successful verification of the user’s email address.
            This call may be made anytime after the User Regiser call is successfully completed,
            however it must be executed within the time limits specified in User Regiser for confirming accounts.
            PERMISSION REQUIRED
            </summary>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.User.UserService.LogoutAsync(System.String,System.Nullable{System.Boolean})">
            <summary>
            SSO platforms use this call to force logout of any active WePay session.
            Typically platforms call this as part of a logout on their own server if they have initiated any SSO sessions.
            There are no arguments for this call.
            PERMISSION REQUIRED
            </summary>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.User.UserService.ChangeEmailAsync(WePay.User.Request.ChangeEmailRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            SSO platforms use this call to update a user’s email address at WePay.
            WePay assumes any new email address is verified.
            Note that WePay is unable to update user email addresses via API for non-SSO users at this time.
            As this is a high-security operation, WePay expects MFA to be checked before making this API call.
            If your platform is using WePay’s MFA service, the trust cookie must be sent.
            PERMISSION REQUIRED
            </summary>
            <param name="changeEmailRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="T:WePay.Withdrawal.Common.WithdrawalStates">
            <summary>
            All possible Withdrawal states
            </summary>
        </member>
        <member name="T:WePay.Withdrawal.Common.WithdrawalStates.ValuesIndices">
            <summary>
            Indices for Values property for iteration
            </summary>
        </member>
        <member name="F:WePay.Withdrawal.Common.WithdrawalStates.Started">
            <summary>
            The withdrawal has started processing.
            </summary>
        </member>
        <member name="F:WePay.Withdrawal.Common.WithdrawalStates.Captured">
            <summary>
            The withdrawal has been credited to the payee's bank account.
            </summary>
        </member>
        <member name="F:WePay.Withdrawal.Common.WithdrawalStates.Failed">
            <summary>
            The withdrawal has failed.
            </summary>
        </member>
        <member name="F:WePay.Withdrawal.Common.WithdrawalStates.Values">
            <summary>
            Holds all values for iteration
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Request.FindRequest.AccountId">
            <summary>
            A unique ID for the account for which you want to find withdrawals.
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Request.FindRequest.Limit">
            <summary>
            The maximum number of withdrawals to be returned.
            Default: 50
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Request.FindRequest.Start">
            <summary>
            Where to start in the withdrawal list if more than the specified limit of withdrawals are found.
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Request.FindRequest.SortOrder">
            <summary>
            Sort the results of the search by time created. Use desc for most recent to oldest.
            Use asc for oldest to most recent.
            (Enumeration of these values can be found in WePay.Shared.Common.SortOrders)
            Default: desc
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Request.FindRequest.State">
            <summary>
            Filter by a withdrawal state.
            (Enumeration of these values can be found in WePay.Withdrawal.Common.WithdrawalStates)
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Request.LookupRequest.WithdrawalId">
            <summary>
            The unique ID of a withdrawal you want to look up.
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Request.ModifyRequest.WithdrawalId">
            <summary>
            The unique ID of a withdrawal you want to look up.
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Request.ModifyRequest.CallbackUri">
            <summary>
            The URI that will receive POST notifications each time the withdrawal changes state.
            See the instant payment notifications guide for more details. This must be a full URI (ex https://www.example.com ) and must not localhost or 127.0.0.1, or include wepay.com.
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Response.LookupResponse.WithdrawalId">
            <summary>
            The unique ID of the withdrawal.
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Response.LookupResponse.AccountId">
            <summary>
            The unique ID of the account from which the funds are coming.
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Response.LookupResponse.State">
            <summary>
            The state that the withdrawal is in.
            (Enumeration of these values can be found in WePay.Withdrawal.Common.WithdrawalStates)
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Response.LookupResponse.Amount">
            <summary>
            The amount of money withdrawn from the WePay account and deposited into the bank account.
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Response.LookupResponse.Currency">
            <summary>
            The currency of the transaction.
            (Enumeration of these values can be found in WePay.Shared.Common.Currencies)
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Response.LookupResponse.Type">
            <summary>
            The type of withdrawal.
            (Enumeration of these values can be found in WePay.Shared.Common.SettlementPaymentMethods)
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Response.LookupResponse.BankData">
            <summary>
            Information about the bank to the funds are sent if the type of withdrawal was ach.
            Includes the nickname of the bank, the last four digits of the account, and a short note.
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Response.LookupResponse.CheckData">
            <summary>
            Information about the recipient if the withdrawal type was check.
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Response.LookupResponse.WithdrawalData">
            <summary>
            Information about a withdrawal.
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Response.LookupResponse.InReview">
            <summary>
            Indicates if the withdrawal is in review prior to capture.
            </summary>
        </member>
        <member name="T:WePay.Withdrawal.Structure.BankDataResponse">
            <summary>
            The bank data structure contains information about the bank account for a withdrawal.
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Structure.BankDataResponse.Name">
            <summary>
            Nickname of the bank.
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Structure.BankDataResponse.AccountLastFour">
            <summary>
            Last four digits of the bank account.
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Structure.BankDataResponse.Note">
            <summary>
            A short description of the reason for the withdrawal.
            </summary>
        </member>
        <member name="T:WePay.Withdrawal.Structure.CheckDataResponse">
            <summary>
            The check data structure contains information about a check issued for a withdrawal.
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Structure.CheckDataResponse.Name">
            <summary>
            Name of the recipient.
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Structure.CheckDataResponse.City">
            <summary>
            The city.
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Structure.CheckDataResponse.Region">
            <summary>
            Will contain the 2-letter US state code for US addresses.
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Structure.CheckDataResponse.PostalCode">
            <summary>
            The postcode/zip for the address.
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Structure.CheckDataResponse.Country">
            <summary>
            The 2-letter ISO-3166-1 country code.
            (Enumeration of these values can be found in WePay.Shared.Common.Countries)
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Structure.CheckDataResponse.Note">
            <summary>
            A short description of the reason for the withdrawal.
            </summary>
        </member>
        <member name="T:WePay.Withdrawal.Structure.WithdrawalDataResponse">
            <summary>
            The withdrawal data structure contains information about a withdrawal.
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Structure.WithdrawalDataResponse.CreateTime">
            <summary>
            The Unix time when the withdrawal was created.
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Structure.WithdrawalDataResponse.CaptureTime">
            <summary>
            The Unix time when the withdrawal was captured and credited to the payee's bank account.
            Returns 0 if withdrawal is not yet captured.
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Structure.WithdrawalDataResponse.RedirectUri">
            <summary>
            The URI that the account owner will return to after completing the withdrawal.
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Structure.WithdrawalDataResponse.CallbackUri">
            <summary>
            The URI that we will post notifications to each time the state on this withdrawal changes.
            </summary>
        </member>
        <member name="P:WePay.Withdrawal.Structure.WithdrawalDataResponse.WithdrawalUri">
            <summary>
            The URI that you will send the account owner to to complete the withdrawal.
            Do not store the returned URI on your side as it can change.
            </summary>
        </member>
        <member name="T:WePay.Withdrawal.WithdrawalService">
            <summary>
            The withdrawal object represents a single payout to the user’s bank account or a check sent to the user.
            </summary>
        </member>
        <member name="M:WePay.Withdrawal.WithdrawalService.LookupAsync(WePay.Withdrawal.Request.LookupRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to lookup the details of a withdrawal.
            A withdrawal object represents the movement of money from a WePay account to a bank account.
            </summary>
            <param name="lookupRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.Withdrawal.WithdrawalService.ModifyAsync(WePay.Withdrawal.Request.ModifyRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to change the CallbackUri on a withdrawal. 
            </summary>
            <param name="modifyRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
        <member name="M:WePay.Withdrawal.WithdrawalService.FindAsync(WePay.Withdrawal.Request.FindRequest,System.String,System.Nullable{System.Boolean})">
            <summary>
            Use this call to find withdrawals made from a specified account.
            </summary>
            <param name="findRequest"></param>
            <param name="accessToken"></param>
            <param name="useStaging"></param>
            <returns></returns>
        </member>
    </members>
</doc>
